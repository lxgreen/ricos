{"version":3,"file":"index.js","sources":["../../src/version/versioningUtils.ts","../../src/consts.ts","../../src/normalization/removeInlineHeaderRanges.ts","../../src/normalization/block-processors.ts","../../../../../node_modules/uc.micro/properties/Any/regex.js","../../../../../node_modules/uc.micro/categories/Cc/regex.js","../../../../../node_modules/uc.micro/categories/Z/regex.js","../../../../../node_modules/uc.micro/categories/P/regex.js","../../../../../node_modules/linkify-it/index.js","../../../../../node_modules/linkify-it/lib/re.js","../../src/types/mediaUploadTypes.ts","../../src/urlValidators/urlValidators.ts","../../src/normalization/linkify.ts","../../src/normalization/inlinePluginsRemover.ts","../../src/normalization/processContentState.ts","../../src/normalization/dataNormalizers/linkDataNormalizer.ts","../../src/normalization/dataNormalizers/pollsDataNormalizer.ts","../../src/normalization/normalizeInitialState.ts","../../src/normalization/dataNormalizers/imageDataNormalizer.ts","../../src/normalization/dataNormalizers/galleryDataNormalizer.ts","../../src/normalization/dataNormalizers/videoDataNormalizer.ts","../../src/normalization/dataNormalizers/verticalEmbedDataNormalizer.ts","../../src/types/contentTypes.ts","../../src/converters/generateRandomId.ts","../../src/contentStateUtils/contentStateUtils.ts","../../src/contentStateUtils/createContent.ts","../../../../../node_modules/isobject/index.js","../../../../../node_modules/is-plain-object/index.js","../../../../../node_modules/isarray/index.js","../../../../../node_modules/has-values/index.js","../../../../../node_modules/get-value/index.js","../../../../../node_modules/has-value/index.js","../../../../../node_modules/has-value/node_modules/isobject/index.js","../../../../../node_modules/unset-value/index.js","../../../../../node_modules/omit-deep/index.js","../../src/comparision/compare.ts","../../src/utils.ts","../../../../../node_modules/fp-ts/es6/function.js","../../../../../node_modules/fp-ts/es6/internal.js","../../../../../node_modules/fp-ts/es6/FromEither.js","../../../../../node_modules/fp-ts/es6/Magma.js","../../../../../node_modules/fp-ts/es6/Semigroup.js","../../../../../node_modules/fp-ts/es6/Array.js","../../../../../node_modules/fp-ts/es6/NonEmptyArray.js","../../../../../node_modules/fp-ts/es6/Either.js","../../../../../node_modules/fp-ts/es6/Monoid.js","../../../../../node_modules/fp-ts/es6/boolean.js","../../../../../node_modules/fp-ts/es6/Option.js","../../src/fp-utils.ts","../../src/index.ts"],"sourcesContent":["import { isNaN } from 'lodash';\nimport packageInfo from '../../package.json';\n// Starting in Webpack 5, named imports from JSON files are no longer supported\n// https://webpack.js.org/blog/2020-10-10-webpack-5-release/#json-modules\n// ------> import { version as currentVersion } from '../../package.json'; // won't work\n\nconst { version: currentVersion } = packageInfo;\n\n// \"1.2.3-alpha.4\" => [1, 2, 3]\nconst toVersion = (versionString: string) => {\n  return versionString\n    .split('.')\n    .map(literal => {\n      const numeric = parseInt(literal, 10);\n      return isNaN(numeric) ? 0 : numeric;\n    })\n    .slice(0, 3);\n};\n\nconst compareVersions: (left: string, right: string) => -1 | 0 | 1 = (left, right) => {\n  const leftVersion = toVersion(left);\n  const rightVersion = toVersion(right);\n  const diff = leftVersion.map((left, idx) => Math.sign(left - rightVersion[idx]) as -1 | 0 | 1);\n  return diff.find(num => num !== 0) || 0;\n};\n\nconst evaluations: { [operator: string]: (left: string, right: string) => boolean } = {\n  '<': (left: string, right: string) => compareVersions(left, right) < 0,\n  '>': (left: string, right: string) => compareVersions(left, right) > 0,\n  '=': (left: string, right: string) => compareVersions(left, right) === 0,\n  '<=': (left: string, right: string) => compareVersions(left, right) <= 0,\n  '>=': (left: string, right: string) => compareVersions(left, right) >= 0,\n};\n\nconst evaluateVersion = (tested: string, semver: string) => {\n  const [, operator, version] = /([<>=]{0,2})(.*)/gm.exec(semver) as string[];\n  return evaluations[operator || '='](tested, version);\n};\n\nexport default {\n  lessThan: (left: string, right: string) => compareVersions(left, right) < 0,\n  greaterThan: (left: string, right: string) => compareVersions(left, right) > 0,\n  equal: (left: string, right: string) => compareVersions(left, right) === 0,\n  compare: compareVersions,\n  currentVersion,\n  evaluate: evaluateVersion,\n};\n","import { Node_Type } from 'ricos-schema';\n\nexport const HEADER_BLOCK = Object.freeze({\n  ONE: 'header-one',\n  TWO: 'header-two',\n  THREE: 'header-three',\n  FOUR: 'header-four',\n  FIVE: 'header-five',\n  SIX: 'header-six',\n  PARAGRAPH: 'unstyled',\n});\n\nexport const DEFAULT_TITLE_HEADINGS = ['h2', 'h3'];\n\nexport const DEFAULT_HEADINGS = ['h2', 'h3', 'h4', 'h5', 'h6'];\n\nexport const BLOCK_TYPES = Object.freeze([\n  'header-one',\n  'header-two',\n  'header-three',\n  'header-four',\n  'header-five',\n  'header-six',\n  'unordered-list-item',\n  'ordered-list-item',\n  'blockquote',\n  'atomic',\n  'code-block',\n  'unstyled',\n]);\n\nexport const WRAP = 'wrap';\nexport const NO_WRAP = 'nowrap';\nexport const UNSTYLED = 'unstyled';\nexport const BLOCKQUOTE = 'blockquote';\nexport const NUMBERED_LIST_TYPE = 'ordered-list-item';\nexport const BULLET_LIST_TYPE = 'unordered-list-item';\nexport const HEADINGS_TYPE = 'headings';\n\nexport const isListType = (type: string): boolean =>\n  type === 'ordered-list-item' || type === 'unordered-list-item';\n\n/* eslint-disable camelcase */\nexport const LINK_BUTTON_TYPE = 'wix-draft-plugin-link-button';\nexport const ACTION_BUTTON_TYPE = 'wix-draft-plugin-action-button';\nexport const CODE_BLOCK_TYPE = 'code-block';\nexport const DIVIDER_TYPE = 'wix-draft-plugin-divider';\nexport const EMOJI_TYPE = 'wix-draft-plugin-emoji';\nexport const FILE_UPLOAD_TYPE = 'wix-draft-plugin-file-upload';\nexport const GALLERY_TYPE = 'wix-draft-plugin-gallery';\nexport const GIPHY_TYPE = 'wix-draft-plugin-giphy';\nexport const HASHTAG_TYPE = 'wix-draft-plugin-hashtag';\nexport const HEADERS_MARKDOWN_TYPE = 'wix-draft-plugin-headers-markdown';\nexport const HTML_TYPE = 'wix-draft-plugin-html';\nexport const IMAGE_TYPE = 'wix-draft-plugin-image';\nexport const IMAGE_TYPE_LEGACY = 'IMAGE';\nexport const INDENT_TYPE = 'wix-rich-content-plugin-indent';\nexport const LINE_SPACING_TYPE = 'line-spacing';\nexport const HEADINGS_DROPDOWN_TYPE = 'wix-rich-content-plugin-headings';\nexport const SPOILER_TYPE = 'wix-rich-content-plugin-spoiler';\nexport const COLLAPSIBLE_LIST_TYPE = 'wix-rich-content-plugin-collapsible-list';\nexport const EXTERNAL_LINK_TYPE = 'wix-draft-plugin-external-link';\nexport const LINK_TYPE = 'LINK';\nexport const CUSTOM_LINK_TYPE = 'ricos-plugin-custom-link';\nexport const LINK_PREVIEW_TYPE = 'wix-draft-plugin-link-preview';\nexport const MAP_TYPE = 'wix-draft-plugin-map';\nexport const EXTERNAL_MENTIONS_TYPE = 'wix-draft-plugin-external-mentions';\nexport const MENTION_TYPE = 'mention';\nexport const SOUND_CLOUD_TYPE = 'wix-draft-plugin-sound-cloud';\nexport const TEXT_COLOR_TYPE = 'wix-rich-content-text-color';\nexport const TEXT_HIGHLIGHT_TYPE = 'wix-rich-content-text-highlight';\nexport const UNDO_REDO_TYPE = 'wix-rich-content-undo-redo';\nexport const APP_EMBED_TYPE = 'wix-draft-plugin-vertical-embed';\nexport const VERTICAL_EMBED_TYPE = 'wix-draft-plugin-vertical-embed';\nexport const VIDEO_TYPE = 'wix-draft-plugin-video';\nexport const VIDEO_TYPE_LEGACY = 'VIDEO-EMBED';\nexport const POLL_TYPE = 'wix-draft-plugin-poll';\nexport const TABLE_TYPE = 'wix-rich-content-plugin-table';\nexport const ANCHOR_TYPE = 'ANCHOR';\nexport const PREVIEW = 'PREVIEW';\nexport const UNSUPPORTED_BLOCKS_TYPE = 'unsupported-blocks';\nexport const EMBED_TYPE = 'EMBED';\nexport const EXTERNAL = 'EXTERNAL';\n\n// ricos plugin types\nexport const RICOS_COLLAPSIBLE_LIST_TYPE = 'ricos-collapsible-list';\nexport const RICOS_ACTION_BUTTON_TYPE = 'ricos-action-button';\nexport const RICOS_CODE_BLOCK_TYPE = 'ricos-code-block';\nexport const RICOS_DIVIDER_TYPE = 'ricos-divider';\nexport const RICOS_EMOJI_TYPE = 'ricos-emoji';\nexport const RICOS_FILE_TYPE = 'ricos-file';\nexport const RICOS_GALLERY_TYPE = 'ricos-gallery';\nexport const RICOS_GIPHY_TYPE = 'ricos-giphy';\nexport const RICOS_HASHTAG_TYPE = 'ricos-hashtag';\nexport const RICOS_HEADERS_MARKDOWN_TYPE = 'ricos-headers-markdown';\nexport const RICOS_HEADINGS_DROPDOWN_TYPE = 'ricos-heading-dropdown';\nexport const RICOS_HEADING = 'ricos-heading';\nexport const RICOS_HTML_TYPE = 'ricos-html';\nexport const RICOS_IMAGE_TYPE = 'ricos-image';\nexport const RICOS_INDENT_TYPE = 'ricos-indent';\nexport const RICOS_LINE_SPACING_TYPE = 'ricos-line-spacing';\nexport const RICOS_LINK_BUTTON_TYPE = 'ricos-link-button';\nexport const RICOS_LINK_PREVIEW_TYPE = 'ricos-link-preview';\nexport const RICOS_MAP_TYPE = 'ricos-map';\nexport const RICOS_POLL_TYPE = 'ricos-poll';\nexport const RICOS_SOUND_CLOUD_TYPE = 'ricos-sound-cloud';\nexport const RICOS_SPOILER_TYPE = 'ricos-spoiler';\nexport const RICOS_TABLE_TYPE = 'ricos-table';\nexport const RICOS_TEXT_COLOR_TYPE = 'ricos-text-color';\nexport const RICOS_TEXT_HIGHLIGHT_TYPE = 'ricos-text-highlight';\nexport const RICOS_UNDO_REDO_TYPE = 'ricos-undo-redo';\nexport const RICOS_VERTICAL_EMBED_TYPE = 'ricos-vertical-embed';\nexport const RICOS_VIDEO_TYPE = 'ricos-video';\nexport const RICOS_ANCHOR_TYPE = 'ricos-anchor';\nexport const RICOS_COLOR_TYPE = 'ricos-color';\nexport const RICOS_LINK_TYPE = 'ricos-link';\nexport const RICOS_MENTION_TYPE = 'ricos-mention';\nexport const RICOS_FONT_SIZE_TYPE = 'ricos-font-size';\nexport const RICOS_BOLD_TYPE = 'ricos-bold';\nexport const RICOS_ITALIC_TYPE = 'ricos-italic';\n\nexport const RICOS_EXTERNAL_LINK_TYPE = 'ricos-external-link'; // TODO: is this type needed?\nexport const RICOS_EXTERNAL_MENTION_TYPE = 'ricos-external-mention'; // TODO: is this type needed?\n\n// tiptap plugins types\nexport const TIPTAP_DIVIDER_TYPE = 'divider';\nexport const TIPTAP_IMAGE_TYPE = 'image';\nexport const TIPTAP_GALLERY_TYPE = 'gallery';\nexport const TIPTAP_FILE_TYPE = 'file';\nexport const TIPTAP_GIF_TYPE = 'gif';\nexport const TIPTAP_VIDEO_TYPE = 'video';\nexport const TIPTAP_LINK_PREVIEW_TYPE = 'linkPreview';\n\nexport const RICOS_NODE_TYPE_TO_DATA_FIELD = {\n  [Node_Type.BUTTON]: 'buttonData',\n  [Node_Type.DIVIDER]: 'dividerData',\n  [Node_Type.FILE]: 'fileData',\n  [Node_Type.GALLERY]: 'galleryData',\n  [Node_Type.GIF]: 'gifData',\n  [Node_Type.HTML]: 'htmlData',\n  [Node_Type.IMAGE]: 'imageData',\n  [Node_Type.COLLAPSIBLE_LIST]: 'collapsibleListData',\n  [Node_Type.LINK_PREVIEW]: 'linkPreviewData',\n  [Node_Type.MAP]: 'mapData',\n  [Node_Type.APP_EMBED]: 'appEmbedData',\n  [Node_Type.VIDEO]: 'videoData',\n  [Node_Type.POLL]: 'pollData',\n  [Node_Type.TABLE]: 'tableData',\n  [Node_Type.TABLE_CELL]: 'tableCellData',\n  [Node_Type.PARAGRAPH]: 'paragraphData',\n  [Node_Type.LIST_ITEM]: 'paragraphData',\n  [Node_Type.HEADING]: 'headingData',\n  [Node_Type.CODE_BLOCK]: 'codeBlockData',\n  [Node_Type.BLOCKQUOTE]: 'paragraphData',\n  [Node_Type.EMBED]: 'embedData',\n  [Node_Type.EXTERNAL]: 'externalData',\n} as const;\n","import { initial, includes, intersection, isEmpty, last, negate, sortBy } from 'lodash';\nimport { HEADER_BLOCK } from '../consts';\nimport { RicosContentBlock, RicosInlineStyleRange, NormalizationProcessor } from '../types';\n\nconst INLINE_HEADER = {\n  ONE: 'inline-header-one',\n  TWO: 'inline-header-two',\n  THREE: 'inline-header-three',\n  FOUR: 'inline-header-four',\n  FIVE: 'inline-header-five',\n  SIX: 'inline-header-six',\n};\nconst INLINE_HEADERS = [INLINE_HEADER.THREE, INLINE_HEADER.TWO, INLINE_HEADER.ONE];\nconst INLINE_HEADER_TO_BLOCK = {\n  [INLINE_HEADER.ONE]: HEADER_BLOCK.ONE,\n  [INLINE_HEADER.TWO]: HEADER_BLOCK.TWO,\n  [INLINE_HEADER.THREE]: HEADER_BLOCK.THREE,\n  [INLINE_HEADER.FOUR]: HEADER_BLOCK.FOUR,\n  [INLINE_HEADER.FIVE]: HEADER_BLOCK.FIVE,\n  [INLINE_HEADER.SIX]: HEADER_BLOCK.SIX,\n};\n\n/**\n * Removes inline headers from a given block.\n *\n * If 'unstyled' block contains only inline headers and spaces (no plain text),\n * it's type is changed to the smallest header block. E.g.: Block with inline-header-one\n * & inline-header-two will be converted to header-two block.\n */\nexport const removeInlineHeaderRanges: NormalizationProcessor<RicosContentBlock> = block => {\n  const inlineHeaderRanges = getInlineHeaderRanges(block.inlineStyleRanges || []);\n  if (isEmpty(inlineHeaderRanges)) {\n    return block;\n  }\n\n  return {\n    ...block,\n    type: getBlockType(block.type, block.text, inlineHeaderRanges),\n    inlineStyleRanges: omitInlineHeaderRanges(block.inlineStyleRanges || []),\n  };\n};\n\nconst isInlineHeaderRange = (range: RicosInlineStyleRange) => includes(INLINE_HEADERS, range.style);\nconst omitInlineHeaderRanges = (ranges: RicosInlineStyleRange[]) =>\n  ranges.filter(negate(isInlineHeaderRange));\nconst getInlineHeaderRanges = (ranges: RicosInlineStyleRange[]) =>\n  ranges.filter(isInlineHeaderRange);\n\nconst getBlockType = (\n  type: RicosContentBlock['type'],\n  text: RicosContentBlock['text'],\n  inlineHeaderRanges: RicosInlineStyleRange[]\n) =>\n  type === 'unstyled' && shouldConvertToHeaderBlock(text, inlineHeaderRanges)\n    ? getBlockHeaderType(inlineHeaderRanges)\n    : type;\n\nconst shouldConvertToHeaderBlock = (\n  text: RicosContentBlock['text'],\n  inlineStyleRanges: RicosContentBlock['inlineStyleRanges']\n) =>\n  sortBy(inlineStyleRanges, 'offset')\n    .map(range => [range.offset, range.offset + range.length])\n    .reduce((ranges: number[][], range: number[]) => {\n      const lastRange = last(ranges);\n      return lastRange && isOverlapping(lastRange, range)\n        ? [...initial(ranges), mergeOverlappingRanges(lastRange, range)]\n        : [...ranges, range];\n    }, [])\n    .reverse()\n    .reduce((text, range) => `${text.slice(0, range[0])}${text.slice(range[1])}`, text)\n    .replace(/\\s/g, '').length === 0;\n\nconst isInRange = (number: number, range: number[]) => range[0] <= number && number <= range[1];\nconst isOverlapping = (rangeA: number[], rangeB: number[]) =>\n  rangeA && rangeB && (isInRange(rangeB[0], rangeA) || isInRange(rangeB[1], rangeA));\nconst mergeOverlappingRanges = (rangeA: number[], rangeB: number[]) => [\n  Math.min(rangeA[0], rangeB[0]),\n  Math.max(rangeA[1], rangeB[1]),\n];\n\nconst getBlockHeaderType = (inlineHeaderRanges: RicosInlineStyleRange[]) => {\n  const smallestInlineHeader = intersection(\n    INLINE_HEADERS,\n    inlineHeaderRanges.map(range => range.style)\n  )[0];\n  return INLINE_HEADER_TO_BLOCK[smallestInlineHeader];\n};\n","import { isEqual, uniqWith } from 'lodash';\nimport { RicosContentBlock, RicosInlineStyleRange, NormalizationProcessor } from '../types';\n\n/**\n * fixAtomicBlockText\n * @description sets whitespace as atomic block text\n */\nexport const fixAtomicBlockText: NormalizationProcessor<RicosContentBlock> = block =>\n  block.type === 'atomic' ? { ...block, text: ' ' } : block;\n\n/**\n * addInlineStyleRanges\n * @description ensures that block.inlineStyleRanges is defined ([] by default)\n */\nexport const addInlineStyleRanges: NormalizationProcessor<RicosContentBlock> = block => ({\n  ...block,\n  inlineStyleRanges: block.inlineStyleRanges || [],\n});\n\n/**\n * fixLinkUnderlineRange\n * @description adds underline inline style ranges to links\n */\nexport const addLinkUnderlineRange: NormalizationProcessor<RicosContentBlock> = (\n  block,\n  range: RicosInlineStyleRange\n) => {\n  const inlineStyleRange = {\n    offset: range.offset,\n    length: range.length,\n    style: 'UNDERLINE',\n  };\n\n  const inlineStyleRanges = uniqWith(\n    [...(block.inlineStyleRanges || []), inlineStyleRange],\n    isEqual\n  );\n\n  return { ...block, inlineStyleRanges };\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,4}[a-zA-Z0-9%/]|' + // github has ... in commit range links,\n                                     // google has .... in links (issue #66)\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +      // allow `,,,` in paths\n          '\\\\!(?!' + re.src_ZCc + '|[!]).|' +\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","export enum MediaUploadErrorKey {\n  GENERIC,\n  SIZE_LIMIT,\n  QUOTA_STORAGE_VISITOR,\n  QUOTA_STORAGE_OWNER,\n  QUOTA_VIDEO_VISITOR,\n  QUOTA_VIDEO_OWNER,\n  QUOTA_SINGLE_VIDEO_VISITOR,\n  QUOTA_SINGLE_VIDEO_OWNER,\n  MIME_TYPE_MISMATCH,\n  WMP_ERROR_GENERAL,\n  INVALID_SESSION,\n  SESSION_EXPIRED,\n  MISSING_WIX_SESSION,\n  INCORRECT_FILE_INFO,\n  CORRUPT_FILE,\n  UNSUPPORTED_EXTENSION,\n  MISSING_HEADER,\n  FORMAT_CHUNK_MISSING,\n  EXT_FILE_AUTHORIZATION,\n  EXT_FILE_FORBBIDEN,\n  IMAGE_FORMAT,\n  CORRUPT_IMAGE,\n  IMAGE_DIMENSIONS_EXCEEDED,\n  MP4_STEREO_FORMAT,\n  WAV_STEREO_FORMAT,\n  WMA_BITRATE,\n  WMA_BITRATE_LOSSY,\n  MP4_BITRATE,\n  MP3_UNSUPPORTED_STEREO,\n  MP3_UNSUPPORTED_FORMAT,\n  WAV_SAMPLE_RATE,\n  AAC_UNSUPPORTED_FORMAT,\n  WAV_UNSUPPORTED_FORMAT,\n  WAV_SAMPLE_SIZE,\n  WAV_CHUNK_SIZE,\n  AUDIO_CODEC,\n  EMPTY_FILE,\n  MP4_UNSUPPORTED_FORMAT,\n  MP4_SAMPLE_RATE,\n  VIDEO_BITRATE,\n  VIDEO_DURATION_MISMATCH,\n  VIDEO_CODEC,\n}\n\nexport interface MediaUploadError {\n  msg?: string | JSX.Element;\n  key?: MediaUploadErrorKey;\n  args?: Record<string, string | number>;\n}\n\nexport type UpdateEntityFunc<T> = ({\n  data,\n  error,\n  index,\n}: {\n  data?: T;\n  error?: MediaUploadError;\n  index?: number;\n}) => void;\n\nexport interface ImageComponentData {\n  id: string;\n  height: number;\n  width: number;\n  original_file_name: string;\n  file_name: string;\n  privacy?: MediaPrivacy;\n}\n\nexport interface VideoComponentData {\n  pathname: string;\n  height?: number;\n  width?: number;\n  privacy?: MediaPrivacy;\n  thumbnail: {\n    pathname: string;\n    height: number;\n    width: number;\n  };\n}\n\nexport type MediaPrivacy = 'public' | 'private';\n\nexport interface FileComponentData {\n  name: string;\n  type: string;\n  url?: string;\n  id?: string;\n  privacy?: MediaPrivacy;\n}\n","import linkifyIt from 'linkify-it';\nconst linkify = linkifyIt();\n\nconst HttpUrlPattern = new RegExp(\n  '^(https?:\\\\/\\\\/)?' + // protocol\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n    '(\\\\#[-a-z\\\\d_]*)?$',\n  'i'\n); // fragment locator\n\nexport const isValidExactUrl = (str: string) => HttpUrlPattern.test(str);\n\nexport const isValidTelUrl = (str: string) => /^tel:[0-9-()+#*]+$/.test(str);\n\nexport const isValidUrl = (url: string) => url && url[0] !== '#' && linkify.test(url);\n\nexport const getUrlMatches = (text: string) => linkify.match(text) || [];\n\nexport const normalizeUrl = (url: string) => (linkify.match(url) || [{}])[0].url;\n\nexport const startsWithHttps = (url: string) => /^https:/.test(url);\n\nconst startsWithHttp = (url: string) => /^http:/.test(url);\n\nexport const getHost = url =>\n  url && !startsWithHttps(url) && !startsWithHttp(url)\n    ? new URL(`http://${url}`).host\n    : new URL(url).host;\n\nexport const hasProtocol = (url: string) => /^[a-z]+:/i.test(url);\n","import { getUrlMatches } from '../urlValidators';\nimport {\n  DraftContent,\n  LinkRange,\n  RicosEntityRange,\n  RicosEntityMap,\n  RicosEntity,\n  RicosContentBlock,\n  NormalizationProcessor,\n} from '../types';\n\nexport const linkify: NormalizationProcessor<DraftContent> = (\n  contentState,\n  { anchorTarget, relValue }\n) => {\n  let lastKey =\n    Object.keys(contentState.entityMap).length > 0\n      ? Math.max(...Object.keys(contentState.entityMap).map(key => parseInt(key, 10))) + 1\n      : 0;\n  return contentState.blocks.reduce(\n    (state, block) => {\n      const { text } = block;\n      const linkEntries = getUrlMatches(text)\n        .filter(({ text: url, index: start, lastIndex: end }: LinkRange) => {\n          const alreadyHasEntity = hasEntityInRange(block, start, end);\n          const longEnough = url.length >= 6;\n          return !alreadyHasEntity && longEnough;\n        })\n        .map(({ text: url, index: start, lastIndex: end }: LinkRange, idx: number) => {\n          lastKey += idx;\n          return createEntity(lastKey, url, start, end, anchorTarget, relValue);\n        });\n      return {\n        blocks: [\n          ...state.blocks,\n          {\n            ...block,\n            entityRanges: [\n              ...block.entityRanges,\n              ...linkEntries.map(\n                ({ entityRange }: { entityRange: RicosEntityRange }) => entityRange\n              ),\n            ],\n          },\n        ],\n        entityMap: {\n          ...linkEntries.reduce(\n            (entityMap: RicosEntityMap, { mapEntry }: { mapEntry: RicosEntity }) => ({\n              ...entityMap,\n              ...mapEntry,\n            }),\n            state.entityMap\n          ),\n        },\n      };\n    },\n    { blocks: [], entityMap: { ...contentState.entityMap } }\n  );\n};\n\nconst hasEntityInRange = (block: RicosContentBlock, start: number, end: number) =>\n  block.entityRanges.some(({ offset, length }) => start < offset + length && end >= offset);\n\nconst createEntity = (\n  entityKey: number,\n  url: string,\n  start: number,\n  end: number,\n  anchorTarget: string,\n  relValue: string\n) => {\n  const entityRange = {\n    offset: start,\n    length: end - start,\n    key: entityKey,\n  };\n\n  const mapEntry = {\n    [entityKey]: {\n      type: 'LINK',\n      mutability: 'MUTABLE',\n      data: {\n        url,\n        target: anchorTarget,\n        rel: relValue,\n      },\n    },\n  };\n\n  return { entityRange, mapEntry };\n};\n","import {\n  RicosEntityMap,\n  RicosEntityRange,\n  RicosContentBlock,\n  NormalizationProcessor,\n  DraftContent,\n} from '../types';\n\nconst imagesTypes = ['wix-draft-plugin-image', 'IMAGE'];\nconst invalidInlineTypes = [\n  ...imagesTypes,\n  'wix-draft-plugin-gallery',\n  'wix-draft-plugin-html',\n  'wix-draft-plugin-video',\n  'wix-draft-plugin-giphy',\n  'wix-draft-plugin-file-upload',\n];\n\nconst filterRangesByType = (\n  entityRanges: RicosEntityRange[],\n  entityMap: RicosEntityMap,\n  entitiesToRemove: string[]\n) => {\n  return entityRanges.filter(entityRange => {\n    const { key } = entityRange;\n    const { type: entityType } = entityMap[key] || {};\n    return entitiesToRemove.indexOf(entityType) === -1;\n  });\n};\n\nconst inlinePluginsRemover: (options?: {\n  imagesOnly?: boolean;\n}) => NormalizationProcessor<DraftContent> = ({ imagesOnly = false } = {}) => contentState => {\n  const newBlocks = contentState.blocks.map((block: RicosContentBlock) => {\n    const { entityRanges = [], type } = block;\n    const isAtomic = type === 'atomic';\n\n    let filteredRanges = entityRanges;\n    if (!isAtomic) {\n      filteredRanges = filterRangesByType(\n        entityRanges,\n        contentState.entityMap,\n        imagesOnly ? imagesTypes : invalidInlineTypes\n      );\n    }\n\n    return {\n      ...block,\n      entityRanges: filteredRanges,\n    };\n  });\n\n  return {\n    ...contentState,\n    blocks: newBlocks,\n  };\n};\n\nexport default inlinePluginsRemover;\n","import { Version } from '../version';\nimport { removeInlineHeaderRanges } from './removeInlineHeaderRanges';\nimport {\n  addLinkUnderlineRange,\n  fixAtomicBlockText,\n  addInlineStyleRanges,\n} from './block-processors';\nimport { linkify } from './linkify';\nimport inlinePluginsRemover from './inlinePluginsRemover';\nimport {\n  NormalizeConfig,\n  DraftContent,\n  RicosContentBlock,\n  RicosInlineStyleRange,\n  NormalizationProcessor,\n} from '../types';\n\n// NOTE: the processor order is important\nconst contentStateProcessingStrategies: (\n  config: NormalizeConfig\n) => { version?: string; processors: NormalizationProcessor<DraftContent>[] }[] = config => {\n  const { disableInlineImages, removeInvalidInlinePlugins } = config;\n\n  const strategies = [{ version: '<3.4.7', processors: [linkify] }];\n  if (disableInlineImages) {\n    strategies.push({\n      version: '<8.0.0',\n      processors: [inlinePluginsRemover({ imagesOnly: true })],\n    });\n  }\n  if (removeInvalidInlinePlugins) {\n    strategies.push({ version: '<8.0.0', processors: [inlinePluginsRemover()] });\n  }\n  return strategies;\n};\n\nconst blockProcessingStrategies: {\n  [key: string]: { processors: NormalizationProcessor<RicosContentBlock>[] }[];\n} = {\n  atomic: [{ processors: [fixAtomicBlockText] }],\n  unstyled: [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'ordered-list-item': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'unordered-list-item': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'code-block': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'header-one': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'header-two': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'header-three': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'header-four': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'header-five': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  'header-six': [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n  blockquote: [{ processors: [removeInlineHeaderRanges, addInlineStyleRanges] }],\n};\n\nconst entityRangeProcessingStrategies: {\n  [key: string]: {\n    version: string;\n    processors: ((block: RicosContentBlock, range: RicosInlineStyleRange) => RicosContentBlock)[];\n  }[];\n} = {\n  LINK: [\n    {\n      version: '<3.4.7',\n      processors: [addLinkUnderlineRange],\n    },\n  ],\n};\n\nconst isVersionCompatible = (strategy: { version?: string }, contentStateVersion: string) =>\n  strategy.version ? Version.evaluate(contentStateVersion, strategy.version) : true;\n\nconst applyStrategies: (\n  strategies: {\n    version?: string;\n    processors: NormalizationProcessor<DraftContent | RicosContentBlock>[];\n  }[],\n  processed: RicosContentBlock | DraftContent,\n  version: string,\n  ...args: any // eslint-disable-line @typescript-eslint/no-explicit-any\n) => ReturnType<NormalizationProcessor<DraftContent | RicosContentBlock>> = (\n  strategies,\n  processed,\n  version,\n  ...args\n) => {\n  if (!strategies) {\n    return processed;\n  }\n\n  let processedUnit = processed;\n  strategies\n    .filter(strategy => isVersionCompatible(strategy, version))\n    .forEach(strategy => {\n      strategy.processors.reduce((unit, processor) => {\n        processedUnit = processor(unit, ...args);\n        return processedUnit;\n      }, processed);\n    });\n  return processedUnit;\n};\n\nexport const processContentState = (contentState: DraftContent, config: NormalizeConfig) => {\n  const { VERSION: contentStateVersion = '0.0.0' } = contentState;\n\n  //process the whole state\n  const processedState = applyStrategies(\n    contentStateProcessingStrategies(config),\n    contentState,\n    contentStateVersion,\n    config\n  );\n\n  const { blocks, entityMap, documentStyle } = processedState as DraftContent;\n\n  return {\n    blocks: blocks.map((block: RicosContentBlock) => {\n      let processedBlock = block;\n\n      // process block\n      processedBlock = applyStrategies(\n        blockProcessingStrategies[block.type],\n        block,\n        contentStateVersion,\n        entityMap,\n        config\n      ) as RicosContentBlock;\n\n      // process block entity ranges\n      if (processedBlock.entityRanges) {\n        processedBlock.entityRanges.forEach(range => {\n          const entityType =\n            entityMap && entityMap[range.key + ''] && entityMap[range.key + ''].type;\n          if (entityType) {\n            processedBlock = applyStrategies(\n              entityRangeProcessingStrategies[entityType],\n              processedBlock,\n              contentStateVersion,\n              range,\n              entityMap,\n              config\n            ) as RicosContentBlock;\n          }\n        });\n      }\n\n      return processedBlock;\n    }),\n    entityMap,\n    documentStyle,\n    VERSION: Version.lessThan(contentStateVersion, Version.currentVersion)\n      ? Version.currentVersion\n      : contentStateVersion,\n  };\n};\n","const isUndefined = val => val === undefined;\nconst isDefined = val => !isUndefined(val);\n\nconst validate = ({ targetBlank, nofollow, target, rel }) =>\n  isUndefined(targetBlank) && isUndefined(nofollow) && isDefined(target) && isDefined(rel);\n\nconst linkDataNormalizer = (\n  componentData,\n  { anchorTarget, relValue }: { anchorTarget: string; relValue: string }\n) => {\n  // converts { targetBlank, nofollow } => { target, rel }\n  const { targetBlank, nofollow, ...rest } = componentData;\n  if (validate(componentData)) {\n    return componentData;\n  }\n\n  return {\n    target: targetBlank ? '_blank' : anchorTarget,\n    rel: nofollow ? 'nofollow' : relValue,\n    ...rest,\n  };\n};\n\nexport default linkDataNormalizer;\n","import { omit } from 'lodash';\n\nconst pollsDataNormalizer = componentData => {\n  return {\n    ...omit(componentData, ['siteToken', 'config.enableVoteRole']),\n    poll: normalizePoll(componentData.poll),\n  };\n};\n\nexport const normalizePoll = poll => {\n  const blackList = [\n    'anonymousCount',\n    'count',\n    'creatorFlag',\n    'ownVotes',\n    'latestVoters',\n    'rating',\n  ];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const normalizedPoll = omit<{ options: any }>(poll, blackList);\n  normalizedPoll.options = poll.options.map(option => omit(option, blackList));\n  return normalizedPoll;\n};\n\nexport default pollsDataNormalizer;\n","import { cloneDeep, mapValues, isEmpty } from 'lodash';\nimport { processContentState } from './processContentState';\nimport { v4 as uuid } from 'uuid';\nimport {\n  IMAGE_TYPE,\n  VIDEO_TYPE,\n  LINK_TYPE,\n  GALLERY_TYPE,\n  VIDEO_TYPE_LEGACY,\n  IMAGE_TYPE_LEGACY,\n  VERTICAL_EMBED_TYPE,\n  WRAP,\n  POLL_TYPE,\n} from '../consts';\nimport {\n  linkDataNormalizer,\n  imageDataNormalizer,\n  galleryDataNormalizer,\n  videoDataNormalizer,\n  verticalEmbedDataNormalizer,\n  pollsDataNormalizer,\n} from './dataNormalizers';\nimport { ComponentData, DraftContent, NormalizeConfig, RicosEntity, RicosContent } from '../types';\n\nconst dataNormalizers: {\n  [entityType: string]: (\n    componentData: Record<string, unknown>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    config?: { [key: string]: any },\n    version?: string\n  ) => Record<string, unknown>;\n} = {\n  [LINK_TYPE]: linkDataNormalizer,\n  [IMAGE_TYPE]: imageDataNormalizer,\n  [GALLERY_TYPE]: galleryDataNormalizer,\n  [VIDEO_TYPE]: videoDataNormalizer,\n  [VERTICAL_EMBED_TYPE]: verticalEmbedDataNormalizer,\n  [POLL_TYPE]: pollsDataNormalizer,\n};\n\nconst normalizeComponentData = (\n  type: RicosEntity['type'],\n  componentData: ComponentData,\n  config: NormalizeConfig,\n  version: string\n) => dataNormalizers[type](componentData, config, version);\n\n/* eslint-disable */\n\n// TODO: create configNormalizers map and separate the IMAGE and VIDEO normalizers\nconst normalizeComponentConfig = (componentData: ComponentData) => {\n  if (componentData.config) {\n    return componentData;\n  }\n\n  const config: ComponentData['config'] = {};\n  const { alignment, size, src, oembed } = componentData;\n  if (alignment) {\n    delete componentData.alignment;\n    config.alignment = alignment;\n    config.size = 'small';\n  } else {\n    if (size) {\n      delete componentData.size;\n      if (size === 'smallCenter') {\n        config.size = 'small';\n        config.alignment = 'center';\n      } else if (size === 'fullWidth') {\n        config.size = 'fullWidth';\n        config.alignment = 'center';\n      }\n    } else {\n      config.size = src && src.width && src.width <= 740 ? 'original' : 'content';\n      config.alignment = 'center';\n    }\n  }\n  const patch: ComponentData = { config };\n\n  if (oembed) {\n    delete componentData.url;\n    delete componentData.oembed;\n    patch.src = oembed.video_url;\n    patch.metadata = { oembed };\n  }\n\n  return { ...componentData, ...patch };\n};\n/* eslint-enable */\n\nconst entityTypeMap = {\n  configNormalization: {\n    [IMAGE_TYPE_LEGACY]: IMAGE_TYPE,\n    [VIDEO_TYPE_LEGACY]: VIDEO_TYPE,\n  },\n  dataNormalization: {\n    [LINK_TYPE]: LINK_TYPE,\n    [IMAGE_TYPE]: IMAGE_TYPE,\n    [GALLERY_TYPE]: GALLERY_TYPE,\n    [VIDEO_TYPE]: VIDEO_TYPE,\n    [VERTICAL_EMBED_TYPE]: VERTICAL_EMBED_TYPE,\n    [POLL_TYPE]: POLL_TYPE,\n  },\n};\n\nconst shouldNormalizeEntity = (\n  entity: RicosEntity,\n  normalizationMap: { [legacyType: string]: string }\n) => Object.keys(normalizationMap).includes(entity.type) && entity.data;\n\nconst shouldNormalizeEntityConfig = (entity: RicosEntity) =>\n  shouldNormalizeEntity(entity, entityTypeMap.configNormalization);\n\nconst shouldNormalizeEntityData = (entity: RicosEntity) =>\n  shouldNormalizeEntity(entity, entityTypeMap.dataNormalization);\n\nconst normalizeEntityMap = (\n  entityMap: DraftContent['entityMap'],\n  config: NormalizeConfig,\n  stateVersion: string\n) => {\n  const normalizeType = (key: string, obj: { [legacyType: string]: string }) => obj[key] || key;\n\n  return mapValues(entityMap, entity => {\n    let newEntity = entity;\n    if (shouldNormalizeEntityConfig(entity)) {\n      newEntity = {\n        ...entity,\n        type: normalizeType(entity.type, entityTypeMap.configNormalization),\n        data: normalizeComponentConfig(entity.data),\n      };\n    } else if (shouldNormalizeEntityData(entity)) {\n      newEntity = {\n        ...entity,\n        type: normalizeType(entity.type, entityTypeMap.dataNormalization),\n        data: normalizeComponentData(entity.type, entity.data, config, stateVersion),\n      };\n    }\n    if (newEntity?.data?.config && !newEntity?.data?.config?.textWrap) {\n      newEntity.data.config.textWrap = WRAP;\n    }\n    convertAnchorToLinkToUndoOneAppFix(newEntity);\n    return newEntity;\n  });\n};\n\nconst isTextAnchor = (entity: RicosEntity) => entity.type === 'ANCHOR';\nconst isImageAnchor = (entity: RicosEntity) =>\n  entity.type === 'wix-draft-plugin-image' &&\n  !!entity.data?.config?.anchor &&\n  !entity.data?.config?.link;\n\nconst convertAnchorToLinkToUndoOneAppFix = (newEntity: RicosEntity) => {\n  if (isTextAnchor(newEntity)) {\n    newEntity.type = 'LINK';\n  } else if (isImageAnchor(newEntity)) {\n    const { anchor, ...rest } = newEntity.data.config;\n    newEntity.data = {\n      ...newEntity.data,\n      config: {\n        ...rest,\n        link: { anchor },\n      },\n    };\n  }\n};\n\nexport default (content: DraftContent, config: NormalizeConfig = {}): DraftContent => {\n  const { blocks, entityMap, documentStyle, VERSION } = processContentState(\n    cloneDeep(content),\n    config\n  );\n  const contentState: RicosContent = {\n    blocks,\n    entityMap: normalizeEntityMap(entityMap, config, content.VERSION || '0.0.0'),\n    VERSION,\n    ID: content.ID || uuid(),\n  };\n  if (!isEmpty(documentStyle)) {\n    contentState.documentStyle = documentStyle;\n  }\n  return contentState;\n};\n","const imageDataNormalizer = (componentData, normalizerConfig) => {\n  const shouldNormalizeDisableDownload =\n    componentData.disableDownload === undefined && normalizerConfig.disableDownload !== undefined;\n\n  const shouldNormalizeExpand =\n    componentData.disableExpand === undefined && normalizerConfig.disableImagesExpand !== undefined;\n\n  if (shouldNormalizeDisableDownload) {\n    componentData.disableDownload = normalizerConfig.disableDownload;\n  }\n\n  if (shouldNormalizeExpand) {\n    componentData.disableExpand = normalizerConfig.disableImagesExpand;\n  }\n\n  const { width, config = {}, ...rest } = componentData;\n  if (config.size === 'inline' && width && !config.width) {\n    return {\n      ...rest,\n      config: {\n        ...config,\n        width,\n      },\n    };\n  } else {\n    return componentData;\n  }\n};\n\nexport default imageDataNormalizer;\n","import { Version } from '../../version';\n\nexport default (componentData, normalizerConfig, stateVersion: string) => {\n  const shouldNormalizeDisableDownload =\n    componentData.disableDownload === undefined && normalizerConfig.disableDownload !== undefined;\n\n  const shouldNormalizeExpand =\n    componentData.disableExpand === undefined &&\n    normalizerConfig.disableGalleryExpand !== undefined;\n\n  if (shouldNormalizeDisableDownload) {\n    componentData.disableDownload = normalizerConfig.disableDownload;\n  }\n\n  if (shouldNormalizeExpand) {\n    componentData.disableExpand = normalizerConfig.disableGalleryExpand;\n  }\n\n  if (Version.lessThan(stateVersion, '6')) {\n    const items = componentData.items.map(item => {\n      const { metadata } = item;\n      const altText = metadata.title;\n      if (altText) {\n        metadata.altText = altText;\n      }\n      // eslint-disable-next-line fp/no-delete\n      delete metadata.title;\n      return item;\n    });\n    componentData.items = items;\n  }\n  if (Version.lessThan(stateVersion, '8.49.0')) {\n    componentData.styles.thumbnailSpacings && (componentData.styles.thumbnailSpacings *= 2);\n  }\n  return componentData;\n};\n","const videoDataNormalizer = (componentData, normalizerConfig) => {\n  const shouldNormalizeDisableDownload =\n    componentData.disableDownload === undefined && normalizerConfig.disableDownload;\n\n  if (shouldNormalizeDisableDownload) {\n    componentData.disableDownload = true;\n  }\n\n  return componentData;\n};\n\nexport default videoDataNormalizer;\n","const verticalEmbedDataNormalizer = componentData => {\n  const { selectedProduct, type } = componentData;\n  const { html, description } = selectedProduct;\n  if (html) {\n    const pageUrl = selectedProduct.html.match(/href=\"[^\"]*/g)?.[0]?.slice(6);\n    let additionalData = {};\n    if (type === 'event') {\n      const scheduling = selectedProduct.description.match(/[^|]+/)?.[0];\n      const location = selectedProduct.description.match(/[^|]*$/)?.[0];\n      additionalData = { scheduling, location };\n    } else if (type === 'booking') {\n      additionalData = { durations: description };\n    }\n    return {\n      ...componentData,\n      selectedProduct: { ...selectedProduct, ...additionalData, pageUrl },\n    };\n  } else {\n    return componentData;\n  }\n};\n\nexport default verticalEmbedDataNormalizer;\n","import { Overwrite } from 'utility-types';\nimport { isArray, isObject } from 'lodash';\nimport { Node, RichContent } from 'ricos-schema';\nimport {\n  RawDraftInlineStyleRange,\n  RawDraftContentBlock,\n  RawDraftEntity,\n  RawDraftContentState,\n  RawDraftEntityRange,\n} from 'draft-js';\n\nexport interface TextBlockStyle {\n  'font-size'?: number;\n  color?: string;\n  'background-color'?: string;\n  'font-weight'?: string;\n  'font-style'?: string;\n  'text-decoration'?: string;\n}\nexport interface DocumentStyle {\n  headerOne?: TextBlockStyle;\n  headerTwo?: TextBlockStyle;\n  headerThree?: TextBlockStyle;\n  headerFour?: TextBlockStyle;\n  headerFive?: TextBlockStyle;\n  headerSix?: TextBlockStyle;\n  paragraph?: TextBlockStyle;\n}\n\nexport type RicosInlineStyleRange = Overwrite<RawDraftInlineStyleRange, { style: string }>;\n\nexport type RicosEntityRange = Overwrite<RawDraftEntityRange, { key: string | number }>;\n\nexport type RicosContentBlock = Overwrite<\n  RawDraftContentBlock,\n  { inlineStyleRanges: RicosInlineStyleRange[]; entityRanges: RicosEntityRange[] }\n>;\n\nexport type RicosEntity = Overwrite<RawDraftEntity, { mutability: string }>;\n\nexport type RicosEntityMap = { [key: string]: RicosEntity };\n\n// Kept for backwards compatibility, use DraftContent instead\nexport interface RicosContent\n  extends Overwrite<\n    RawDraftContentState,\n    {\n      blocks: RicosContentBlock[];\n      entityMap: RicosEntityMap;\n    }\n  > {\n  documentStyle?: DocumentStyle;\n  VERSION?: string;\n  ID?: string;\n}\n\nexport interface DraftContent extends RicosContent {}\n\ntype RawNode = Overwrite<Node, { type: string; nodes: RawNode[] }>;\nexport type RawRichContent = Overwrite<RichContent, { nodes: RawNode[] }>;\n\nexport function isDraftContent(content): content is DraftContent {\n  return isArray(content.blocks) && isObject(content.entityMap);\n}\n\nexport function isRichContent(content): content is RichContent {\n  return isArray(content.nodes);\n}\n","/** Taken from draft-js https://github.com/facebook/draft-js/blob/master/src/model/keys/generateRandomKey.js */\n\nconst seenKeys = {};\nconst MULTIPLIER = Math.pow(2, 24);\n\nexport function generateId(): string {\n  let key;\n  // eslint-disable-next-line fp/no-loops, no-prototype-builtins\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(Number(key))) {\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n  seenKeys[key] = true;\n  return key;\n}\n","import { DraftContent } from '../types';\n\nexport const isContentStateEmpty = (contentState: DraftContent): boolean => {\n  const { blocks } = contentState;\n  if (blocks.length === 0) {\n    return true;\n  }\n  if (blocks.length > 1) {\n    return false;\n  }\n  const firstBlock = blocks[0];\n  const { text, type, depth } = firstBlock;\n  return text === '' && type === 'unstyled' && depth === 0;\n};\n","// Starting in Webpack 5, named imports from JSON files are no longer supported\n// https://webpack.js.org/blog/2020-10-10-webpack-5-release/#json-modules\n// ------> import { version } from '../../package.json'; // won't work\nimport packageInfo from '../../package.json';\nimport { DraftContent } from '../types';\n\nconst { version } = packageInfo;\n\ntype BlockType =\n  | 'unstyled'\n  | 'blockquote'\n  | 'header-one'\n  | 'header-two'\n  | 'header-three'\n  | 'header-four'\n  | 'header-five'\n  | 'header-six';\n\nexport const createContent = (text: string, type: BlockType = 'unstyled'): DraftContent => {\n  return {\n    blocks: [\n      {\n        key: 'd79aa',\n        text,\n        type,\n        depth: 0,\n        inlineStyleRanges: [],\n        entityRanges: [],\n        data: {},\n      },\n    ],\n    entityMap: {},\n    VERSION: version,\n  };\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function hasValue(o, noZero) {\n  if (o === null || o === undefined) {\n    return false;\n  }\n\n  if (typeof o === 'boolean') {\n    return true;\n  }\n\n  if (typeof o === 'number') {\n    if (o === 0 && noZero === true) {\n      return false;\n    }\n    return true;\n  }\n\n  if (o.length !== undefined) {\n    return o.length !== 0;\n  }\n\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n","/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function(obj, prop, a, b, c) {\n  if (!isObject(obj) || !prop) {\n    return obj;\n  }\n\n  prop = toString(prop);\n\n  // allowing for multiple properties to be passed as\n  // a string or array, but much faster (3-4x) than doing\n  // `[].slice.call(arguments)`\n  if (a) prop += '.' + toString(a);\n  if (b) prop += '.' + toString(b);\n  if (c) prop += '.' + toString(c);\n\n  if (prop in obj) {\n    return obj[prop];\n  }\n\n  var segs = prop.split('.');\n  var len = segs.length;\n  var i = -1;\n\n  while (obj && (++i < len)) {\n    var key = segs[i];\n    while (key[key.length - 1] === '\\\\') {\n      key = key.slice(0, -1) + '.' + segs[++i];\n    }\n    obj = obj[key];\n  }\n  return obj;\n};\n\nfunction isObject(val) {\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\n}\n\nfunction toString(val) {\n  if (!val) return '';\n  if (Array.isArray(val)) {\n    return val.join('.');\n  }\n  return val;\n}\n","/*!\n * has-value <https://github.com/jonschlinkert/has-value>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\nvar hasValues = require('has-values');\nvar get = require('get-value');\n\nmodule.exports = function(obj, prop, noZero) {\n  if (isObject(obj)) {\n    return hasValues(get(obj, prop), noZero);\n  }\n  return hasValues(obj, prop);\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isArray = require('isarray');\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && isArray(val) === false;\n};\n","/*!\n * unset-value <https://github.com/jonschlinkert/unset-value>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\nvar has = require('has-value');\n\nmodule.exports = function unset(obj, prop) {\n  if (!isObject(obj)) {\n    throw new TypeError('expected an object.');\n  }\n  if (obj.hasOwnProperty(prop)) {\n    delete obj[prop];\n    return true;\n  }\n\n  if (has(obj, prop)) {\n    var segs = prop.split('.');\n    var last = segs.pop();\n    while (segs.length && segs[segs.length - 1].slice(-1) === '\\\\') {\n      last = segs.pop().slice(0, -1) + '.' + last;\n    }\n    while (segs.length) obj = obj[prop = segs.shift()];\n    return (delete obj[last]);\n  }\n  return true;\n};\n","'use strict';\n\nvar isObject = require('is-plain-object');\nvar unset = require('unset-value');\n\nmodule.exports = function omitDeep(value, keys) {\n  if (typeof value === 'undefined') {\n    return {};\n  }\n\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      value[i] = omitDeep(value[i], keys);\n    }\n    return value;\n  }\n\n  if (!isObject(value)) {\n    return value;\n  }\n\n  if (typeof keys === 'string') {\n    keys = [keys];\n  }\n\n  if (!Array.isArray(keys)) {\n    return value;\n  }\n\n  for (var j = 0; j < keys.length; j++) {\n    unset(value, keys[j]);\n  }\n\n  for (var key in value) {\n    if (value.hasOwnProperty(key)) {\n      value[key] = omitDeep(value[key], keys);\n    }\n  }\n\n  return value;\n};\n","/** Based on https://gist.github.com/Yimiprod/7ee176597fef230d1451 */\n/* eslint-disable no-console, @typescript-eslint/no-explicit-any, fp/no-delete */\nimport { RawDraftEntityRange } from '@wix/draft-js';\nimport { transform, isEqualWith, isEqual, isObject, omit, pick, cloneDeep } from 'lodash';\nimport omitDeep from 'omit-deep';\nimport { DraftContent } from '..';\nimport { fromEntries } from '../utils';\n\nconst IGNORED_KEYS = [\n  'updatedTimestamp',\n  'createdTimestamp',\n  'tempData',\n  'isCustomVideo',\n  'VERSION',\n];\nconst IGNORED_POLL_CONFIG_KEYS = ['alignment', 'size', 'width'];\nconst IGNORED_SRC_KEYS = ['id', 'original_file_name'];\nconst IGNORED_BUTTON_DESIGN_KEYS = ['activeButton', 'padding'];\nconst OEMBED_KEYS = ['thumbnail_url', 'width', 'height'];\n\n/**\n * Deep diff between two object, using lodash\n * @param object Object compared\n * @param base   Object to compare with\n * @return       Return a new object who represent the diff\n */\nexport function compare(object, base, options: { verbose?: boolean; ignoredKeys?: string[] } = {}) {\n  const { verbose, ignoredKeys } = options;\n  const allIgnoredKeys = [...IGNORED_KEYS, ...(ignoredKeys || [])];\n\n  const objectWithoutIgnored = omitDeep(cloneDeep(object), allIgnoredKeys);\n  const basetWithoutIgnored = omitDeep(cloneDeep(base), allIgnoredKeys);\n\n  objectWithoutIgnored.blocks && removeEmoji(objectWithoutIgnored);\n  basetWithoutIgnored.blocks && removeEmoji(basetWithoutIgnored);\n\n  function changes(object, base) {\n    return transform<any, any>(object, (result, value, key) => {\n      const baseValue = base[key];\n      if (!isEqualWith(value, baseValue, comparator)) {\n        const areObjects = isObject(value) && isObject(baseValue);\n        const currentValue = areObjects ? changes(value, baseValue) : value;\n        result[key] = currentValue;\n        if (verbose && (!isObject(currentValue) || Object.keys(currentValue).length === 0)) {\n          console.dir(\n            {\n              [key]: {\n                from: baseValue,\n                to: value,\n              },\n            },\n            { depth: null }\n          );\n        }\n      }\n    });\n  }\n\n  return changes(objectWithoutIgnored, basetWithoutIgnored);\n}\n\nconst comparator = (\n  left: Record<string, any> | undefined, // defined for type safety, could have any value\n  right: Record<string, any> | undefined,\n  key: string\n) => {\n  if (left?.enableVoteRole !== undefined || right?.enableVoteRole !== undefined) {\n    return isEqual(omit(left, IGNORED_POLL_CONFIG_KEYS), omit(right, IGNORED_POLL_CONFIG_KEYS));\n  }\n  if (left?.thumbnail_url || right?.thumbnail_url) {\n    return isEqual(pick(left, OEMBED_KEYS), pick(right, OEMBED_KEYS));\n  }\n  if (key === 'src') {\n    return isEqual(omit(left, IGNORED_SRC_KEYS), omit(right, IGNORED_SRC_KEYS));\n  }\n  if (key === 'design') {\n    return isEqual(omit(left, IGNORED_BUTTON_DESIGN_KEYS), omit(right, IGNORED_BUTTON_DESIGN_KEYS));\n  }\n  if (key === 'link' && (right?.rel === 'noopener' || left?.rel === 'noopener')) {\n    return isEqual(omit(left, ['rel']), omit(right, ['rel']));\n  }\n  return undefined;\n};\n\nconst removeEmoji = (object: DraftContent) => {\n  const emojiEntityKeys: number[] = [];\n  Object.entries<any>(object.entityMap).forEach(\n    ([key, value]) => value.type === 'EMOJI_TYPE' && emojiEntityKeys.push(parseInt(key, 10))\n  );\n  object.entityMap = fromEntries(\n    Object.entries(object.entityMap).filter(([, value]) => value.type !== 'EMOJI_TYPE')\n  );\n  object.blocks = object.blocks.map(block => ({\n    ...block,\n    entityRanges: block.entityRanges.filter(\n      (range: RawDraftEntityRange) => !emojiEntityKeys.includes(range.key)\n    ),\n  }));\n};\n","import styles from './version.scss';\n\nexport const a = styles;\n\nexport function fromEntries(iterable) {\n  return [...iterable].reduce((obj, [key, val]) => {\n    obj[key] = val;\n    return obj;\n  }, {});\n}\n","// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) { return function () { return ({\n    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n    zero: function () { return B.zero; },\n    one: function () { return B.one; },\n    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n    not: function (x) { return function (a) { return B.not(x(a)); }; }\n}); }; };\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) { return function () { return ({\n    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n}); }; };\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) { return function (f) { return f(a); }; };\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = \n/*#__PURE__*/\nconstant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = \n/*#__PURE__*/\nconstant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = \n/*#__PURE__*/\nconstant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = \n/*#__PURE__*/\nconstant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nexport function flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        case 10:\n            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));\n        case 11:\n            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));\n        case 12:\n            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));\n        case 13:\n            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));\n        case 14:\n            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));\n        case 15:\n            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));\n        case 16:\n            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));\n        case 17:\n            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));\n        case 18:\n            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));\n        case 19:\n            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));\n        case 20:\n            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));\n    }\n    return;\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category instances\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n","var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/** @internal */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/** @internal */\nexport var none = { _tag: 'None' };\n/** @internal */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isLeft = function (ma) { return ma._tag === 'Left'; };\n/** @internal */\nexport var isRight = function (ma) { return ma._tag === 'Right'; };\n/** @internal */\nexport var left = function (e) { return ({ _tag: 'Left', left: e }); };\n/** @internal */\nexport var right = function (a) { return ({ _tag: 'Right', right: a }); };\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var singleton = function (a) { return [a]; };\n/** @internal */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/** @internal */\nexport var head = function (as) { return as[0]; };\n/** @internal */\nexport var tail = function (as) { return as.slice(1); };\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var emptyReadonlyArray = [];\n/** @internal */\nexport var emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };\n","/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nimport { flow } from './function';\nimport * as _ from './internal';\nexport function fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexport function fromPredicate(F) {\n    return function (predicate, onFalse) { return function (a) {\n        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n    }; };\n}\nexport function fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return flow(f, from); };\n    };\n}\nexport function chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexport function fromEitherK(F) {\n    return function (f) { return flow(f, F.fromEither); };\n}\nexport function chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexport function filterOrElse(F, M) {\n    return function (predicate, onFalse) { return function (ma) {\n        return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n    }; };\n}\n","/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var filterFirst = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n}); }; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var filterSecond = function (predicate) { return function (M) { return ({\n    concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n}); }; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var endo = function (f) { return function (M) { return ({\n    concat: function (first, second) { return M.concat(f(first), f(second)); }\n}); }; };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nexport var concatAll = function (M) { return function (startWith) { return function (as) {\n    return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n}; }; };\n","/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nimport { getSemigroup, identity } from './function';\nimport * as _ from './internal';\nimport * as M from './Magma';\nimport * as Or from './Ord';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var min = function (O) { return ({\n    concat: Or.min(O)\n}); };\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var max = function (O) { return ({\n    concat: Or.max(O)\n}); };\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var intercalate = function (middle) { return function (S) { return ({\n    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n}); }; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var first = function () { return ({ concat: identity }); };\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var last = function () { return ({ concat: function (_, y) { return y; } }); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexport var concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupVoid = constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\n/**\n * Use [`last`](#last) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastSemigroup = last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstSemigroup = first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleSemigroup = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructSemigroup = struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualSemigroup = reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getJoinSemigroup = max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getMeetSemigroup = min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category combinators\n * @since 2.5.0\n * @deprecated\n */\nexport var getIntercalateSemigroup = intercalate;\nexport function fold(S) {\n    var concatAllS = concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFunctionSemigroup = getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n","import { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as NEA from './NonEmptyArray';\nimport * as RA from './ReadonlyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\n/**\n * @category natural transformations\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) { return function (as) {\n    return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n}; };\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty()); }; };\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) { return function (as) { return (isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty()); }; };\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category combinators\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (as) {\n    var out = [];\n    for (var i = 0; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanLeft = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[0] = b;\n    for (var i = 0; i < len; i++) {\n        out[i + 1] = f(out[i], as[i]);\n    }\n    return out;\n}; };\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanRight = function (b, f) { return function (as) {\n    var len = as.length;\n    var out = new Array(len + 1);\n    out[len] = b;\n    for (var i = len - 1; i >= 0; i--) {\n        out[i] = f(as[i], out[i + 1]);\n    }\n    return out;\n}; };\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.0.0\n */\nexport var isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexport var lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var tail = function (as) { return (isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var init = function (as) { return (isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeLeft = function (n) { return function (as) { return (isOutOfBound(n, as) ? copy(as) : as.slice(0, n)); }; };\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeRight = function (n) { return function (as) {\n    return isOutOfBound(n, as) ? copy(as) : n === 0 ? [] : as.slice(-n);\n}; };\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropLeft = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n}; };\n/**\n * Drop a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropRight = function (n) { return function (as) {\n    return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n}; };\nexport function dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.0.0\n */\nexport var findLastIndex = RA.findLastIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var copy = function (as) { return as.slice(); };\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n}; };\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) { return modifyAt(i, function () { return a; }); };\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nexport var deleteAt = function (i) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n}; };\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n}; };\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = function (as) { return (isEmpty(as) ? [] : as.slice().reverse()); };\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.length <= 1 ? copy(as) : as.slice().sort(O.compare);\n}; };\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Rotate a `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an array. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an array of type `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexport var elem = RA.elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : []); };\n};\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var splitAt = function (n) { return function (as) {\n    return n >= 1 && isNonEmpty(as) ? NEA.splitAt(n)(as) : isEmpty(as) ? [copy(as), []] : [[], copy(as)];\n}; };\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return fromOption(f.apply(void 0, a));\n}; };\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(NEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concatW = function (second) { return function (first) {\n    return isEmpty(first) ? copy(second) : isEmpty(second) ? copy(first) : first.concat(second);\n}; };\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second)\n            ? unionE(second)(first)\n            : isNonEmpty(first)\n                ? copy(first)\n                : copy(second);\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexport var of = NEA.of;\n/**\n * @category Zero\n * @since 2.7.0\n */\nexport var zero = function () { return []; };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (fa) { return chain(function (f) { return pipe(fa, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    var out = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (_.isSome(optionB)) {\n            out.push(optionB.value);\n        }\n    }\n    return out;\n}; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (as) { return as.filter(predicate); }; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (as) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < as.length; i++) {\n        var b = as[i];\n        if (predicateWithIndex(i, b)) {\n            right.push(b);\n        }\n        else {\n            left.push(b);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return partitionMapWithIndex(function (_, a) { return f(a); }); };\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    var left = [];\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n}; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return fa.concat(that()); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (as) {\n    return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n}; };\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = RA.foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return _reduce(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n    });\n}; };\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * Creates an `Array` from the results of `f(b)`, where `b` is an initial value.\n * `unfold` stops when `f` returns `Option.none`.\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   unfold(5, (n) => (n > 0 ? some([n, n - 1]) : none)),\n *   [5, 4, 3, 2, 1]\n * )\n *\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Array';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RA.getShow;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\n/**\n * Returns a `Monoid` for `Array<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: []\n}); };\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = RA.getOrd;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: []\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#_PURE_*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexport var guard = \n/*#__PURE__*/\nguard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = witherDefault(Traversable, Compactable);\nvar _wilt = wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category ChainRec\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexport var filterE = \n/*#__PURE__*/\nfilterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromEitherK = \n/*#__PURE__*/\nfromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var every = RA.every;\n/**\n * @since 2.9.0\n */\nexport var some = function (predicate) { return function (as) { return as.some(predicate); }; };\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var array = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n","var __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) { return function (tail) { return __spreadArray([head], tail); }; };\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) { return function (init) { return __spreadArray(__spreadArray([], init), [end]); }; };\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    var xs = fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var uniq = function (E) { return function (as) {\n    if (as.length === 1) {\n        return copy(as);\n    }\n    var out = [head(as)];\n    var rest = tail(as);\n    var _loop_1 = function (a) {\n        if (out.every(function (o) { return !E.equals(o, a); })) {\n            out.push(a);\n        }\n    };\n    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n        var a = rest_1[_i];\n        _loop_1(a);\n    }\n    return out;\n}; };\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return copy;\n};\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var rotate = function (n) { return function (as) {\n    var len = as.length;\n    var m = Math.round(n) % len;\n    if (isOutOfBound(Math.abs(m), as) || m === 0) {\n        return copy(as);\n    }\n    if (m < 0) {\n        var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n        return pipe(s, concat(f));\n    }\n    else {\n        return rotate(m - len)(as);\n    }\n}; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromArray = function (as) { return (isNonEmpty(as) ? _.some(as) : _.none); };\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) { return function (n) {\n    var j = Math.max(0, Math.floor(n));\n    var out = [f(0)];\n    for (var i = 1; i < j; i++) {\n        out.push(f(i));\n    }\n    return out;\n}; };\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @category destructors\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = function (as) { return __spreadArray([last(as)], as.slice(0, -1).reverse()); };\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var groupBy = function (f) { return function (as) {\n    var out = {};\n    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n        var a = as_1[_i];\n        var k = f(a);\n        if (out.hasOwnProperty(k)) {\n            out[k].push(a);\n        }\n        else {\n            out[k] = [a];\n        }\n    }\n    return out;\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = function (O) { return function (as) {\n    return as.slice().sort(O.compare);\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) { return function (as) {\n    return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) { return function (as) {\n    return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var copy = fromReadonlyNonEmptyArray;\n/**\n * @category Pointed\n * @since 2.0.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @category combinators\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var prependAll = function (middle) { return function (as) {\n    var out = [middle, as[0]];\n    for (var i = 1; i < as.length; i++) {\n        out.push(middle, as[i]);\n    }\n    return out;\n}; };\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var intersperse = function (middle) { return function (as) {\n    var rest = tail(as);\n    return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : copy(as);\n}; };\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var foldMap = RNEA.foldMap;\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) { return function (as) {\n    var out = fromReadonlyNonEmptyArray(f(0, head(as)));\n    for (var i = 1; i < as.length; i++) {\n        out.push.apply(out, f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var chop = function (f) { return function (as) {\n    var _a = f(as), b = _a[0], rest = _a[1];\n    var out = [b];\n    var next = rest;\n    while (isNonEmpty(next)) {\n        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n        out.push(b_1);\n        next = rest_2;\n    }\n    return out;\n}; };\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var splitAt = function (n) { return function (as) {\n    var m = Math.max(1, n);\n    return m >= as.length ? [copy(as), []] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n}; };\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// type class members\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category Alt\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (as) {\n    return pipe(as, concatW(that()));\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (as) {\n    return chain(function (f) { return pipe(as, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) {\n    return chainWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (as) {\n    var next = tail(as);\n    var out = [f(as)];\n    while (isNonEmpty(next)) {\n        out.push(f(next));\n        next = tail(next);\n    }\n    return out;\n}; };\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return mapWithIndex(function (_, a) { return f(a); }); };\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) { return function (as) {\n    var out = [f(0, head(as))];\n    for (var i = 1; i < as.length; i++) {\n        out.push(f(i, as[i]));\n    }\n    return out;\n}; };\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RNEA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(function (_, a) { return a; }); };\n/**\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) { return function (as) {\n    var out = F.map(f(0, head(as)), of);\n    for (var i = 1; i < as.length; i++) {\n        out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n    }\n    return out;\n}; }; };\n/**\n * @since 2.7.0\n */\nexport var extract = RNEA.head;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RNEA.getEq;\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#_PURE_*/\nflap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\nexport var tail = function (as) { return as.slice(1); };\n/**\n * @since 2.0.0\n */\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.0.0\n */\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexport var max = RNEA.max;\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchLeft = function (f) { return function (as) { return f(head(as), tail(as)); }; };\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category destructors\n * @since 2.11.0\n */\nexport var matchRight = function (f) { return function (as) {\n    return f(init(as), last(as));\n}; };\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) { return function (as) { return __spreadArray([\n    f(head(as))\n], tail(as)); }; };\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) { return function (as) {\n    return pipe(init(as), append(f(last(as))));\n}; };\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) { return function (as) { return fromArray(as.filter(function (a, i) { return predicate(i, a); })); }; };\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category destructors\n * @since 2.9.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, append(end)); };\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category combinators\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = RNEA.concatAll;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var nonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n","import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { tailRec } from './ChainRec';\nimport { chainOptionK as chainOptionK_, filterOrElse as filterOrElse_, fromOption as fromOption_, fromOptionK as fromOptionK_, fromPredicate as fromPredicate_ } from './FromEither';\nimport { flow, identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var right = _.right;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = foldMap(M);\n    return pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return pipe(fa, bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\nvar _chainRec = function (a, f) {\n    return tailRec(f(a), function (e) {\n        return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (SE, SA) { return ({\n    show: function (ma) { return (isLeft(ma) ? \"left(\" + SE.show(ma.left) + \")\" : \"right(\" + SA.show(ma.right) + \")\"); }\n}); };\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n    }\n}); };\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function (S) { return ({\n    concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n}); };\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getCompactable = function (M) {\n    var empty = left(M.empty);\n    return {\n        URI: URI,\n        _E: undefined,\n        compact: function (ma) { return (isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : right(ma.right.value)); },\n        separate: function (ma) {\n            return isLeft(ma)\n                ? separated(ma, ma)\n                : isLeft(ma.right)\n                    ? separated(right(ma.right.left), empty)\n                    : separated(empty, right(ma.right.right));\n        }\n    };\n};\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getFilterable = function (M) {\n    var empty = left(M.empty);\n    var _a = getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? separated(ma, ma)\n            : p(ma.right)\n                ? separated(empty, right(ma.right))\n                : separated(right(ma.right), empty);\n    };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return isLeft(e) ? separated(right(e.left), empty) : separated(empty, right(e.right));\n        }\n    };\n};\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getWitherable = function (M) {\n    var F_ = getFilterable(M);\n    var C = getCompactable(M);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: witherDefault(Traversable, C),\n        wilt: wiltDefault(Traversable, C)\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var getApplicativeValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return isLeft(fab)\n            ? isLeft(fa)\n                ? left(SE.concat(fab.left, fa.left))\n                : fab\n            : isLeft(fa)\n                ? fa\n                : right(fab.right(fa.right));\n    },\n    of: of\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var getAltValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if (isRight(me)) {\n            return me;\n        }\n        var ea = that();\n        return isLeft(ea) ? left(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isLeft(fa) ? fa : right(f(fa.right));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var of = right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * @category instance operations\n * @since 2.8.0\n */\nexport var apW = function (fa) { return function (fab) { return (isLeft(fab) ? fab : isLeft(fa) ? fa : right(fab.right(fa.right))); }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var ap = apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * @category instance operations\n * @since 2.6.0\n */\nexport var chainW = function (f) { return function (ma) {\n    return isLeft(ma) ? ma : f(ma.right);\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var chain = chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(b, fa.right);\n}; };\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(fa.right, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category instance operations\n * @since 2.6.3\n */\nexport var traverse = function (F) { return function (f) { return function (ta) { return (isLeft(ta) ? F.of(left(ta.left)) : F.map(f(ta.right), right)); }; }; };\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category instance operations\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ma) {\n    return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var bimap = function (f, g) { return function (fa) { return (isLeft(fa) ? left(f(fa.left)) : right(g(fa.right))); }; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : fa;\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) { return (isLeft(fa) ? that() : fa); }; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isLeft(wa) ? wa : right(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ChainRec = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var throwError = left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var fromPredicate = \n/*#__PURE__*/\nfromPredicate_(FromEither);\n// -------------------------------------------------------------------------------------\n// natural transformations\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexport var fromOption = \n/*#__PURE__*/\nfromOption_(FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isRight = _.isRight;\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchW = function (onLeft, onRight) { return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n}; };\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onLeft) { return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma.right;\n}; };\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#_PURE_*/\nflap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.8.0\n */\nexport var chainFirstW = chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * @category combinators\n * @since 2.11.0\n */\nexport var flattenW = \n/*#__PURE__*/\nchainW(identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * Derivable from `Chain`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = flattenW;\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category combinators\n * @since 2.10.0\n */\nexport var fromOptionK = \n/*#__PURE__*/\nfromOptionK_(FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var chainOptionK = \n/*#__PURE__*/\nchainOptionK_(FromEither, Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var filterOrElse = \n/*#__PURE__*/\nfilterOrElse_(FromEither, Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * @category combinators\n * @since 2.9.0\n */\nexport var filterOrElseW = filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var swap = function (ma) { return (isLeft(ma) ? right(ma.left) : left(ma.right)); };\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var orElseW = function (onLeft) { return function (ma) {\n    return isLeft(ma) ? onLeft(ma.left) : ma;\n}; };\n/**\n * Useful for recovering from errors.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var orElse = orElseW;\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var fromNullable = function (e) { return function (a) {\n    return a == null ? left(e) : right(a);\n}; };\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f, onThrow) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onThrow(e));\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f, onThrow) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n}; };\n/**\n * @category interop\n * @since 2.9.0\n */\nexport var fromNullableK = function (e) {\n    var from = fromNullable(e);\n    return function (f) { return flow(f, from); };\n};\n/**\n * @category interop\n * @since 2.9.0\n */\nexport var chainNullableK = function (e) {\n    var from = fromNullableK(e);\n    return function (f) { return chain(from(f)); };\n};\n/**\n * @category interop\n * @since 2.10.0\n */\nexport var toUnion = \n/*#__PURE__*/\nfoldW(identity, identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nexport function toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\n/**\n * @since 2.0.0\n */\nexport var elem = function (E) { return function (a, ma) {\n    return isLeft(ma) ? false : E.equals(a, ma.right);\n}; };\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) { return function (ma) {\n    return isLeft(ma) ? false : predicate(ma.right);\n}; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n/**\n * @since 2.8.0\n */\nexport var bindW = bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n/**\n * @since 2.8.0\n */\nexport var apSW = apS;\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var ApT = of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var e = f(0, _.head(as));\n    if (isLeft(e)) {\n        return e;\n    }\n    var out = [e.right];\n    for (var i = 1; i < as.length; i++) {\n        var e_1 = f(i, as[i]);\n        if (isLeft(e_1)) {\n            return e_1;\n        }\n        out.push(e_1.right);\n    }\n    return right(out);\n}; };\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport function parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var stringifyJSON = function (u, onError) {\n    return tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var either = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/\ngetApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/\ngetApplicativeMonoid(Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationSemigroup = function (SE, SA) {\n    return getApplySemigroup_(getApplicativeValidation(SE))(SA);\n};\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationMonoid = function (SE, MA) {\n    return getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport function getValidation(SE) {\n    var ap = getApplicativeValidation(SE).ap;\n    var alt = getAltValidation(SE).alt;\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        of: of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: sequence,\n        chainRec: _chainRec,\n        throwError: throwError,\n        ap: ap,\n        alt: alt\n    };\n}\n","import { getMonoid as getFM } from './function';\nimport { getMonoid as getEM } from './Endomorphism';\nimport * as _ from './internal';\nimport * as Se from './Semigroup';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a monoid where `concat` will return the minimum, based on the provided bounded order.\n *\n * The `empty` value is the `top` value.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as M from 'fp-ts/Monoid'\n *\n * const M1 = M.min(N.Bounded)\n *\n * assert.deepStrictEqual(M1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var min = function (B) { return ({\n    concat: Se.min(B).concat,\n    empty: B.top\n}); };\n/**\n * Get a monoid where `concat` will return the maximum, based on the provided bounded order.\n *\n * The `empty` value is the `bottom` value.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as M from 'fp-ts/Monoid'\n *\n * const M1 = M.max(N.Bounded)\n *\n * assert.deepStrictEqual(M1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var max = function (B) { return ({\n    concat: Se.max(B).concat,\n    empty: B.bottom\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Monoid`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Monoid'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Monoid).concat('a', 'b'), 'ba')\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var reverse = function (M) { return ({\n    concat: Se.reverse(M).concat,\n    empty: M.empty\n}); };\n/**\n * Given a struct of monoids returns a monoid for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const M = struct<Point>({\n *   x: N.MonoidSum,\n *   y: N.MonoidSum\n * })\n *\n * assert.deepStrictEqual(M.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var struct = function (monoids) {\n    var empty = {};\n    for (var k in monoids) {\n        if (_.has.call(monoids, k)) {\n            empty[k] = monoids[k].empty;\n        }\n    }\n    return {\n        concat: Se.struct(monoids).concat,\n        empty: empty\n    };\n};\n/**\n * Given a tuple of monoids returns a monoid for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Monoid'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const M1 = tuple(S.Monoid, N.MonoidSum)\n * assert.deepStrictEqual(M1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const M2 = tuple(S.Monoid, N.MonoidSum, B.MonoidAll)\n * assert.deepStrictEqual(M2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var monoids = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        monoids[_i] = arguments[_i];\n    }\n    return ({\n        concat: Se.tuple.apply(Se, monoids).concat,\n        empty: monoids.map(function (m) { return m.empty; })\n    });\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the monoid `empty` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(concatAll(N.MonoidSum)([1, 2, 3]), 6)\n * assert.deepStrictEqual(concatAll(N.MonoidSum)([]), 0)\n *\n * @since 2.10.0\n */\nexport var concatAll = function (M) { return Se.concatAll(M)(M.empty); };\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use [`Monoid`](./void.ts.html#monoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var monoidVoid = {\n    concat: Se.semigroupVoid.concat,\n    empty: undefined\n};\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleMonoid = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructMonoid = struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualMonoid = reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getJoinMonoid = max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category constructors\n * @since 2.0.0\n * @deprecated\n */\nexport var getMeetMonoid = min;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var fold = concatAll;\n/**\n * Use [`MonoidAll`](./boolean.ts.html#monoidall) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var monoidAll = {\n    concat: Se.semigroupAll.concat,\n    empty: true\n};\n/**\n * Use [`MonoidAny`](./boolean.ts.html#monoidany) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var monoidAny = {\n    concat: Se.semigroupAny.concat,\n    empty: false\n};\n/**\n * Use [`getMonoid`](./function.ts.html#getmonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFunctionMonoid = getFM;\n/**\n * Use [`getEndomorphismMonoid`](./function.ts.html#getendomorphismmonoid) instead.\n *\n * **Note**. The execution order in [`getEndomorphismMonoid`](./function.ts.html#getendomorphismmonoid) is reversed.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return reverse(getEM()); };\n/**\n * Use [`Monoid`](./string.ts.html#monoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var monoidString = {\n    concat: Se.semigroupString.concat,\n    empty: ''\n};\n/**\n * Use [`MonoidSum`](./number.ts.html#monoidsum) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var monoidSum = {\n    concat: Se.semigroupSum.concat,\n    empty: 0\n};\n/**\n * Use [`MonoidProduct`](./number.ts.html#monoidproduct) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var monoidProduct = {\n    concat: Se.semigroupProduct.concat,\n    empty: 1\n};\n","// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isBoolean = function (u) { return typeof u === 'boolean'; };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchW = function (onFalse, onTrue) { return function (value) {\n    return value ? onTrue() : onFalse();\n}; };\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Defines the fold over a boolean value.\n * Takes two thunks `onTrue`, `onFalse` and a `boolean` value.\n * If `value` is false, `onFalse()` is returned, otherwise `onTrue()`.\n *\n * @example\n * import { some, map } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n * import { match } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(\n *  pipe(\n *    some(true),\n *    map(match(() => 'false', () => 'true'))\n *  ),\n *  some('true')\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var match = foldW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.2.0\n */\nexport var fold = match;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var BooleanAlgebra = {\n    meet: function (first, second) { return first && second; },\n    join: function (first, second) { return first || second; },\n    zero: false,\n    one: true,\n    implies: function (first, second) { return !first || second; },\n    not: function (b) { return !b; }\n};\n/**\n * `boolean` semigroup under conjunction.\n *\n * @example\n * import { SemigroupAll } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(SemigroupAll.concat(true, true), true)\n * assert.deepStrictEqual(SemigroupAll.concat(true, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupAll = {\n    concat: function (first, second) { return first && second; }\n};\n/**\n * `boolean` semigroup under disjunction.\n *\n * @example\n * import { SemigroupAny } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(SemigroupAny.concat(true, true), true)\n * assert.deepStrictEqual(SemigroupAny.concat(true, false), true)\n * assert.deepStrictEqual(SemigroupAny.concat(false, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupAny = {\n    concat: function (first, second) { return first || second; }\n};\n/**\n * `boolean` monoid under conjunction.\n *\n * The `empty` value is `true`.\n *\n * @example\n * import { MonoidAll } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(MonoidAll.concat(true, true), true)\n * assert.deepStrictEqual(MonoidAll.concat(true, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidAll = {\n    concat: SemigroupAll.concat,\n    empty: true\n};\n/**\n * `boolean` monoid under disjunction.\n *\n * The `empty` value is `false`.\n *\n * @example\n * import { MonoidAny } from 'fp-ts/boolean'\n *\n * assert.deepStrictEqual(MonoidAny.concat(true, true), true)\n * assert.deepStrictEqual(MonoidAny.concat(true, false), true)\n * assert.deepStrictEqual(MonoidAny.concat(false, false), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidAny = {\n    concat: SemigroupAny.concat,\n    empty: false\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (b) { return JSON.stringify(b); }\n};\n","import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { chainEitherK as chainEitherK_, fromEitherK as fromEitherK_ } from './FromEither';\nimport { constNull, constUndefined, flow, identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { not } from './Predicate';\nimport { first, last } from './Semigroup';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var some = _.some;\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? some(a) : none); };\n}\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getLeft = function (ma) { return (ma._tag === 'Right' ? none : some(ma.left)); };\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getRight = function (ma) { return (ma._tag === 'Left' ? none : some(ma.right)); };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (S) { return ({\n    show: function (ma) { return (isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n}); };\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }\n}); };\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = function (O) { return ({\n    equals: getEq(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function (S) { return ({\n    concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },\n    empty: none\n}); };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isNone(fa) ? none : some(f(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var of = some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) {\n    return isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return isNone(ma) ? none : f(ma.value);\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(b, fa.value);\n}; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isNone(fa) ? M.empty : f(fa.value);\n}; }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(fa.value, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * @category instance operations\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isNone(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category instance operations\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var zero = function () { return none; };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category constructors\n * @since 2.11.0\n */\nexport var guard = \n/*#__PURE__*/\nguard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isNone(wa) ? none : some(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var compact = \n/*#__PURE__*/\nchain(identity);\nvar defaultSeparated = \n/*#__PURE__*/\nseparated(none, none);\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var separate = function (ma) {\n    return isNone(ma) ? defaultSeparated : separated(getLeft(ma.value), getRight(ma.value));\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (fa) { return (isNone(fa) ? none : predicate(fa.value) ? fa : none); }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var filterMap = function (f) { return function (fa) {\n    return isNone(fa) ? none : f(fa.value);\n}; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var partition = function (predicate) { return function (fa) { return separated(_filter(fa, not(predicate)), _filter(fa, predicate)); }; };\n/**\n * @category instance operations\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return flow(map(f), separate); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var traverse = function (F) { return function (f) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(f(ta.value), some)); }; }; };\n/**\n * @category instance operations\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) { return (isNone(ta) ? F.of(none) : F.map(ta.value, some)); }; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\nvar _wither = \n/*#__PURE__*/\nwitherDefault(Traversable, Compactable);\nvar _wilt = \n/*#__PURE__*/\nwiltDefault(Traversable, Compactable);\n/**\n * @category instance operations\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category instance operations\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category instance operations\n * @since 2.7.0\n */\nexport var throwError = function () { return none; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category natural transformations\n * @since 2.0.0\n */\nexport var fromEither = getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Less strict version of [`match`](#match).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var matchW = function (onNone, onSome) { return function (ma) {\n    return isNone(ma) ? onNone() : onSome(ma.value);\n}; };\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onNone) { return function (ma) { return (isNone(ma) ? onNone() : ma.value); }; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Derivable from `Functor`.\n *\n * @category combinators\n * @since 2.10.0\n */\nexport var flap = \n/*#__PURE__*/\nflap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apFirst = \n/*#__PURE__*/\napFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * Derivable from `Apply`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var apSecond = \n/*#__PURE__*/\napSecond_(Apply);\n/**\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var flatten = compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * Derivable from `Chain`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/\nchainFirst_(Chain);\n/**\n * Derivable from `Extend`.\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var fromEitherK = \n/*#__PURE__*/\nfromEitherK_(FromEither);\n/**\n * @category combinators\n * @since 2.11.0\n */\nexport var chainEitherK = \n/*#__PURE__*/\nchainEitherK_(FromEither, Chain);\n// -------------------------------------------------------------------------------------\n// interop\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var fromNullable = function (a) { return (a == null ? none : some(a)); };\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f) {\n    try {\n        return some(f());\n    }\n    catch (e) {\n        return none;\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f) { return function () {\n    var a = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        a[_i] = arguments[_i];\n    }\n    return tryCatch(function () { return f.apply(void 0, a); });\n}; };\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category interop\n * @since 2.9.0\n */\nexport var fromNullableK = function (f) { return flow(f, fromNullable); };\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category interop\n * @since 2.9.0\n */\nexport var chainNullableK = function (f) { return function (ma) {\n    return isNone(ma) ? none : fromNullable(f(ma.value));\n}; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexport var toNullable = \n/*#__PURE__*/\nmatch(constNull, identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category interop\n * @since 2.0.0\n */\nexport var toUndefined = \n/*#__PURE__*/\nmatch(constUndefined, identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * assert.strictEqual(elem(N.Eq)(1, some(1)), true)\n * assert.strictEqual(elem(N.Eq)(2, some(1)), false)\n * assert.strictEqual(elem(N.Eq)(1, none), false)\n *\n * @since 2.0.0\n */\nexport function elem(E) {\n    return function (a, ma) { return (isNone(ma) ? false : E.equals(a, ma.value)); };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) { return function (ma) {\n    return isNone(ma) ? false : predicate(ma.value);\n}; };\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.9.0\n */\nexport var Do = \n/*#__PURE__*/\nof(_.emptyRecord);\n/**\n * @since 2.8.0\n */\nexport var bindTo = \n/*#__PURE__*/\nbindTo_(Functor);\n/**\n * @since 2.8.0\n */\nexport var bind = \n/*#__PURE__*/\nbind_(Chain);\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = \n/*#__PURE__*/\napS_(Apply);\n// -------------------------------------------------------------------------------------\n// sequence T\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var ApT = of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) { return function (as) {\n    var o = f(0, _.head(as));\n    if (isNone(o)) {\n        return none;\n    }\n    var out = [o.value];\n    for (var i = 1; i < as.length; i++) {\n        var o_1 = f(i, as[i]);\n        if (isNone(o_1)) {\n            return none;\n        }\n        out.push(o_1.value);\n    }\n    return some(out);\n}; };\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * @since 2.9.0\n */\nexport var traverseArray = function (f) {\n    return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/\ntraverseArray(identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n// tslint:disable: deprecation\n/**\n * Use `Refinement` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport function getRefinement(getOption) {\n    return function (a) { return isSome(getOption(a)); };\n}\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category combinators\n * @since 2.0.0\n * @deprecated\n */\nexport var mapNullable = chainNullableK;\n/**\n * Use small, specific instances instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var option = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    zero: zero,\n    alt: _alt,\n    extend: _extend,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/\ngetApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/\ngetApplicativeMonoid(Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstMonoid = function () { return getMonoid(first()); };\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastMonoid = function () { return getMonoid(last()); };\n","import * as A from 'fp-ts/Array';\nimport * as E from 'fp-ts/Either';\nimport { Eq } from 'fp-ts/Eq';\nimport { identity, pipe } from 'fp-ts/function';\nimport { concatAll, Monoid } from 'fp-ts/Monoid';\nimport { MonoidAll, MonoidAny } from 'fp-ts/boolean';\nimport * as O from 'fp-ts/Option';\nimport * as S from 'fp-ts/Semigroup';\n\n/**\n *\n * Functional switch/case analogue:\n *\n *  switch(candidate) {\n *    case(predicate(candidate)) => resolution(candidate);\n *    ...\n *    default: defaultT\n *  }\n *\n * @template C examination candidate type\n * @template T resolution result type\n * @param {C} candidate\n * @param {T} defaultT fallback value\n * @param {[(candidate: C) => boolean, (candidate: C) => T][]} resolvers [predicate, resolution] tuples\n * @returns  {T}\n */\nexport const firstRight = <C, T>(\n  candidate: C,\n  defaultT: T,\n  resolvers: [(candidate: C) => boolean, (candidate: C) => T][]\n): T => {\n  const firstRightSemi = E.getSemigroup<T, T>(S.first<T>());\n  const concatFirstRightSemi = S.concatAll(firstRightSemi)(E.left(defaultT));\n  return pipe(\n    concatFirstRightSemi(\n      pipe(\n        resolvers,\n        A.map(r =>\n          pipe(\n            candidate,\n            E.fromPredicate(r[0], () => defaultT),\n            E.map(r[1])\n          )\n        )\n      )\n    ),\n    E.fold(identity, identity)\n  );\n};\n\nexport const equals = <T>(E: Eq<T>) => (lhs: T) => (rhs: T) => E.equals(lhs, rhs);\n\nexport const concatApply = <T, D>(m: Monoid<T>) => (fns: ((data: D) => T)[]) => (data: D) =>\n  pipe(fns, A.ap(A.of(data)), concatAll(m));\n\nexport const and = concatApply(MonoidAll);\nexport const or = concatApply(MonoidAny);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const tap = <F extends (data: D) => any, D>(f: F) => (data: D): D => {\n  f(data);\n  return data;\n};\n\nconst logWithTag = <T>(tag: string) => (data: T) => console.log(tag, data); // eslint-disable-line no-console\nconst stringifyWithTag = <T>(tag: string) => (data: T) =>\n  console.log(tag, JSON.stringify(data, null, 2)); // eslint-disable-line no-console\n\nexport const log = <T>(tag: string) => tap(logWithTag<T>(tag));\n\nexport const deepLog = <T>(tag: string) => tap(stringifyWithTag<T>(tag));\n\nexport const getMatches = (regex: RegExp) => (str: string): O.Option<RegExpExecArray> =>\n  pipe(regex.exec(str), O.fromNullable);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const stringifyWithReplace = (replacer: (key: string, value: any) => any, space = 2) => <A>(\n  a: A\n): E.Either<unknown, string> =>\n  E.tryCatch(() => {\n    const s = JSON.stringify(a, replacer, space);\n    if (typeof s !== 'string') {\n      throw new Error('Converting unsupported structure to JSON');\n    }\n    return s;\n  }, identity);\n","import styles from './index.scss';\nexport * from './normalization';\nexport {\n  isValidExactUrl,\n  isValidUrl,\n  normalizeUrl,\n  getUrlMatches,\n  startsWithHttps,\n  hasProtocol,\n  getHost,\n  isValidTelUrl,\n} from './urlValidators/urlValidators';\n\nexport * from './consts';\nexport * from './types';\nexport * from './version';\nexport { generateId } from './converters/generateRandomId';\n\nexport { isContentStateEmpty } from './contentStateUtils/contentStateUtils';\n\nexport { createContent } from './contentStateUtils/createContent';\n\nexport { compare } from './comparision/compare';\n\nexport * from './fp-utils';\n\nexport const a = {\n  ...styles,\n};\n"],"names":["toVersion","versionString","split","map","literal","numeric","parseInt","isNaN","slice","compareVersions","left","right","leftVersion","rightVersion","idx","Math","sign","find","num","evaluations","lessThan","greaterThan","equal","compare","currentVersion","packageInfo","evaluate","tested","semver","exec","operator","version","HEADER_BLOCK","Object","freeze","ONE","TWO","THREE","FOUR","FIVE","SIX","PARAGRAPH","DEFAULT_TITLE_HEADINGS","DEFAULT_HEADINGS","BLOCK_TYPES","WRAP","NO_WRAP","UNSTYLED","BLOCKQUOTE","NUMBERED_LIST_TYPE","BULLET_LIST_TYPE","HEADINGS_TYPE","isListType","type","LINK_BUTTON_TYPE","ACTION_BUTTON_TYPE","CODE_BLOCK_TYPE","DIVIDER_TYPE","EMOJI_TYPE","FILE_UPLOAD_TYPE","GALLERY_TYPE","GIPHY_TYPE","HASHTAG_TYPE","HEADERS_MARKDOWN_TYPE","HTML_TYPE","IMAGE_TYPE","IMAGE_TYPE_LEGACY","INDENT_TYPE","LINE_SPACING_TYPE","HEADINGS_DROPDOWN_TYPE","SPOILER_TYPE","COLLAPSIBLE_LIST_TYPE","EXTERNAL_LINK_TYPE","LINK_TYPE","CUSTOM_LINK_TYPE","LINK_PREVIEW_TYPE","MAP_TYPE","EXTERNAL_MENTIONS_TYPE","MENTION_TYPE","SOUND_CLOUD_TYPE","TEXT_COLOR_TYPE","TEXT_HIGHLIGHT_TYPE","UNDO_REDO_TYPE","APP_EMBED_TYPE","VERTICAL_EMBED_TYPE","VIDEO_TYPE","VIDEO_TYPE_LEGACY","POLL_TYPE","TABLE_TYPE","ANCHOR_TYPE","PREVIEW","UNSUPPORTED_BLOCKS_TYPE","EMBED_TYPE","EXTERNAL","RICOS_COLLAPSIBLE_LIST_TYPE","RICOS_ACTION_BUTTON_TYPE","RICOS_CODE_BLOCK_TYPE","RICOS_DIVIDER_TYPE","RICOS_EMOJI_TYPE","RICOS_FILE_TYPE","RICOS_GALLERY_TYPE","RICOS_GIPHY_TYPE","RICOS_HASHTAG_TYPE","RICOS_HEADERS_MARKDOWN_TYPE","RICOS_HEADINGS_DROPDOWN_TYPE","RICOS_HEADING","RICOS_HTML_TYPE","RICOS_IMAGE_TYPE","RICOS_INDENT_TYPE","RICOS_LINE_SPACING_TYPE","RICOS_LINK_BUTTON_TYPE","RICOS_LINK_PREVIEW_TYPE","RICOS_MAP_TYPE","RICOS_POLL_TYPE","RICOS_SOUND_CLOUD_TYPE","RICOS_SPOILER_TYPE","RICOS_TABLE_TYPE","RICOS_TEXT_COLOR_TYPE","RICOS_TEXT_HIGHLIGHT_TYPE","RICOS_UNDO_REDO_TYPE","RICOS_VERTICAL_EMBED_TYPE","RICOS_VIDEO_TYPE","RICOS_ANCHOR_TYPE","RICOS_COLOR_TYPE","RICOS_LINK_TYPE","RICOS_MENTION_TYPE","RICOS_FONT_SIZE_TYPE","RICOS_BOLD_TYPE","RICOS_ITALIC_TYPE","RICOS_EXTERNAL_LINK_TYPE","RICOS_EXTERNAL_MENTION_TYPE","TIPTAP_DIVIDER_TYPE","TIPTAP_IMAGE_TYPE","TIPTAP_GALLERY_TYPE","TIPTAP_FILE_TYPE","TIPTAP_GIF_TYPE","TIPTAP_VIDEO_TYPE","TIPTAP_LINK_PREVIEW_TYPE","RICOS_NODE_TYPE_TO_DATA_FIELD","INLINE_HEADER","INLINE_HEADERS","INLINE_HEADER_TO_BLOCK","removeInlineHeaderRanges","block","inlineHeaderRanges","getInlineHeaderRanges","inlineStyleRanges","isEmpty","getBlockType","text","omitInlineHeaderRanges","isInlineHeaderRange","range","includes","style","ranges","filter","negate","shouldConvertToHeaderBlock","getBlockHeaderType","sortBy","offset","length","reduce","lastRange","last","isOverlapping","initial","mergeOverlappingRanges","reverse","replace","isInRange","number","rangeA","rangeB","min","max","smallestInlineHeader","intersection","addInlineStyleRanges","assign","obj","sources","Array","prototype","call","arguments","forEach","source","keys","key","_class","toString","isFunction","escapeRE","str","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","compile","opts","src_Any","require$$0","src_Cc","require$$1","src_Z","require$$2","src_P","require$$3","src_ZPCc","join","src_ZCc","src_pseudo_letter","src_ip4","src_xn","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","schema_test","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","arr","MediaUploadErrorKey","linkify","HttpUrlPattern","isValidExactUrl","isValidTelUrl","isValidUrl","getUrlMatches","normalizeUrl","startsWithHttps","getHost","startsWithHttp","URL","host","hasProtocol","contentState","anchorTarget","relValue","lastKey","entityMap","blocks","state","linkEntries","alreadyHasEntity","hasEntityInRange","longEnough","createEntity","entityRanges","entityRange","mapEntry","some","entityKey","mutability","data","target","rel","imagesTypes","invalidInlineTypes","inlinePluginsRemover","imagesOnly","newBlocks","filteredRanges","entitiesToRemove","entityType","filterRangesByType","blockProcessingStrategies","atomic","processors","unstyled","blockquote","entityRangeProcessingStrategies","LINK","inlineStyleRange","uniqWith","isEqual","isVersionCompatible","strategy","contentStateVersion","Version","applyStrategies","strategies","processed","args","processedUnit","unit","processor","processContentState","config","VERSION","processedState","disableInlineImages","removeInvalidInlinePlugins","contentStateProcessingStrategies","documentStyle","processedBlock","isUndefined","undefined","isDefined","normalizePoll","poll","blackList","normalizedPoll","omit","option","dataNormalizers","componentData","targetBlank","nofollow","rest","normalizerConfig","shouldNormalizeDisableDownload","disableDownload","shouldNormalizeExpand","disableExpand","disableImagesExpand","width","size","stateVersion","disableGalleryExpand","items","item","metadata","altText","title","styles","thumbnailSpacings","selectedProduct","html","description","pageUrl","_selectedProduct$html","_selectedProduct$html2","additionalData","scheduling","_selectedProduct$desc","location","_selectedProduct$desc2","durations","normalizeComponentData","normalizeComponentConfig","alignment","src","oembed","patch","video_url","entityTypeMap","configNormalization","dataNormalization","shouldNormalizeEntity","entity","normalizationMap","normalizeEntityMap","normalizeType","mapValues","newEntity","shouldNormalizeEntityConfig","shouldNormalizeEntityData","_newEntity2","_newEntity2$data","_newEntity2$data$conf","textWrap","convertAnchorToLinkToUndoOneAppFix","_entity$data","_entity$data$config","anchor","_entity$data2","_entity$data2$config","isImageAnchor","content","cloneDeep","ID","uuid","isDraftContent","isObject","isRichContent","nodes","seenKeys","MULTIPLIER","pow","generateId","Number","floor","random","isContentStateEmpty","firstBlock","depth","createContent","isObjectObject","o","noZero","prop","hasValues","a","b","c","segs","i","get","TypeError","has","pop","omitDeep","value","ctor","constructor","prot","j","unset","IGNORED_KEYS","IGNORED_POLL_CONFIG_KEYS","IGNORED_SRC_KEYS","IGNORED_BUTTON_DESIGN_KEYS","OEMBED_KEYS","object","base","verbose","ignoredKeys","allIgnoredKeys","objectWithoutIgnored","basetWithoutIgnored","removeEmoji","changes","transform","baseValue","isEqualWith","comparator","currentValue","console","dir","from","to","enableVoteRole","thumbnail_url","pick","iterable","emojiEntityKeys","entries","identity","pipe","ab","bc","cd","de","ef","fg","gh","hi","ij","jk","kl","lm","mn","no","op","pq","qr","rs","st","e","_tag","fromPredicate","F","predicate","onFalse","fromEither","_.right","_.left","concatAll","M","startWith","as","semigroupVoid","constant","of","f","fa","chain","ma","out","apply","chainWithIndex","_","fromPredicate_","URI","isLeft","fold","onLeft","onRight","Se.semigroupVoid","MonoidAny","first","second","empty","none","fromNullable","firstRight","candidate","defaultT","resolvers","S","firstRightSemi","x","y","E","concatFirstRightSemi","A","r","equals","lhs","rhs","concatApply","fns","Se.concatAll","and","or","tap","log","tag","logWithTag","deepLog","JSON","stringify","stringifyWithTag","getMatches","regex","O","stringifyWithReplace","replacer","space","onThrow","s"],"mappings":"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"}