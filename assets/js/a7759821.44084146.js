(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{115:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),c=(n(0),n(167)),o={id:"content_extract",title:"Content Extractor",sidebar_label:"Content Extractor"},i={unversionedId:"content_api/content_extract",id:"content_api/content_extract",isDocsHomePage:!1,title:"Content Extractor",description:"extract API",source:"@site/docs/content_api/content_extract.md",slug:"/content_api/content_extract",permalink:"/docs/content_api/content_extract",editUrl:"https://github.com/wix/ricos/edit/master/website/docs/content_api/content_extract.md",version:"current",sidebar_label:"Content Extractor",sidebar:"api",previous:{title:"Content Builder",permalink:"/docs/content_api/ContentBuilder"},next:{title:"Content Modifier",permalink:"/docs/content_api/content_modify"}},l=[{value:"extract API",id:"extract-api",children:[]},{value:"Examples",id:"examples",children:[]}],p={toc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"extract-api"},"extract API"),Object(c.b)("p",null,"The Content Extractor provides access to content nodes regardless of their nesting level."),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"extract")," API accepts RichContent nodes array, and exposes ",Object(c.b)("inlineCode",{parentName:"p"},"Extractor<T>")," that allows chaining:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"interface Extractor<DT> {\n  filter: (predicate: (data: DT) => boolean) => Extractor<DT>;\n  map: <MT>(mapper: (data: DT) => MT) => Extractor<MT>;\n  chain: <CT>(mapper: (data: DT) => Extractor<CT>) => Extractor<CT>[];\n  get: () => DT[];\n}\n")),Object(c.b)("h2",{id:"examples"},"Examples"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Extract node keys of images with invalid (empty) alt text:")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"import { extract } from 'ricos-content/libs/extract';\n...\nconst keys = extract(richContent.nodes)\n  .filter(({ imageData }) => !!imageData && !imageData.altText)\n  .map(({ key }) => key)\n  .get();\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Extract first image URL:")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"const url = extract(richContent.nodes)\n  .map(({ imageData }) => imageData?.image?.src?.url || imageData?.image?.src?.custom)\n  .get()[0];\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Extract total image count:")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"const imageCount = extract(richContent.nodes)\n  .filter(({ type }) => type === Node_Type.IMAGE)\n  .get().length;\nconst galleryImageCount = extract(richContent.nodes)\n  .map(({ galleryData }) => galleryData?.items || [])\n  .map(\n    items =>\n      items.filter(\n        ({ metadata }) => (!!metadata && metadata?.type === 'image') || !metadata?.type\n      ).length\n  )\n  .get()\n  .reduce((sum, count) => sum + count, 0);\n")),Object(c.b)("ol",{start:4},Object(c.b)("li",{parentName:"ol"},"Extract list item texts, grouped by lists:")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-ts"},"const listTexts = extract(richContent.nodes)\n  .filter(({ type }) => type === Node_Type.BULLETED_LIST || type === Node_Type.ORDERED_LIST)\n  .chain(n => extract(n).map(({ textData }) => textData?.text || ''))\n  .map(extractor => extractor.get());\n")),Object(c.b)("p",null,"Note the recursive ",Object(c.b)("inlineCode",{parentName:"p"},"extract")," and ",Object(c.b)("inlineCode",{parentName:"p"},"chain")," combination."))}s.isMDXComponent=!0},167:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),b=a,d=m["".concat(o,".").concat(b)]||m[b]||u[b]||c;return n?r.a.createElement(d,i(i({ref:t},p),{},{components:n})):r.a.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=b;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<c;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);